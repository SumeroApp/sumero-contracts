{
  "address": "0xccc4991785bC50A88c735D985310bd386cF6AE9F",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "addEmp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "addStakingReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "addSwapPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "closeEmp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "closeStakingReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "closeSwapPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idToVerifiedEmps",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "enum AssetManager.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idToVerifiedStakingRewards",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "enum AssetManager.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idToVerifiedSwapPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "enum AssetManager.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "pauseEmp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "pauseStakingReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "pauseSwapPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalEmpAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStakingRewardAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSwapPairAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "unpauseEmp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "unpauseStakingReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "unpauseSwapPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x309b5f5975fa577d4d1d9a64b5ad6289ff792cab1e4b1912850a82286ea28281",
  "receipt": {
    "to": null,
    "from": "0x8D9656505A20C9562488bfa6EA0d1eF6B12966d7",
    "contractAddress": "0xccc4991785bC50A88c735D985310bd386cF6AE9F",
    "transactionIndex": 193,
    "gasUsed": "811892",
    "logsBloom": "0x
    "blockHash": "0xcbb9b4c7da930a1d57dd28431c7f84921e06ae8fe1d53aa99bf7cc2091fed179",
    "transactionHash": "0x309b5f5975fa577d4d1d9a64b5ad6289ff792cab1e4b1912850a82286ea28281",
    "logs": [
      {
        "transactionIndex": 193,
        "blockNumber": 7503688,
        "transactionHash": "0x309b5f5975fa577d4d1d9a64b5ad6289ff792cab1e4b1912850a82286ea28281",
        "address": "0xccc4991785bC50A88c735D985310bd386cF6AE9F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008d9656505a20c9562488bfa6ea0d1ef6b12966d7"
        ],
        "data": "0x",
        "logIndex": 445,
        "blockHash": "0xcbb9b4c7da930a1d57dd28431c7f84921e06ae8fe1d53aa99bf7cc2091fed179"
      }
    ],
    "blockNumber": 7503688,
    "cumulativeGasUsed": "27770975",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "902221a1375c045c8d98f9ed312af11b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"addEmp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"addStakingReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"addSwapPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"closeEmp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"closeStakingReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"closeSwapPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToVerifiedEmps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum AssetManager.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToVerifiedStakingRewards\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum AssetManager.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToVerifiedSwapPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum AssetManager.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"pauseEmp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"pauseStakingReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"pauseSwapPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalEmpAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakingRewardAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSwapPairAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"unpauseEmp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"unpauseStakingReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"unpauseSwapPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AssetManager.sol\":\"AssetManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AssetManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract AssetManager is Ownable {\\n    uint256 public totalEmpAssets;\\n    mapping(uint256 => Asset) public idToVerifiedEmps;\\n\\n    uint256 public totalSwapPairAssets;\\n    mapping(uint256 => Asset) public idToVerifiedSwapPairs;\\n\\n    uint256 public totalStakingRewardAssets;\\n    mapping(uint256 => Asset) public idToVerifiedStakingRewards;\\n\\n    enum Status {\\n        Closed,\\n        Paused,\\n        Open\\n    }\\n\\n    struct Asset {\\n        address addr;\\n        Status status;\\n    }\\n\\n    // EMPs\\n    function addEmp(address _asset) external onlyOwner {\\n        require(_asset != address(0), \\\"Asset Manager: ZERO_ADDRESS\\\");\\n        totalEmpAssets = totalEmpAssets + 1;\\n        idToVerifiedEmps[totalEmpAssets] = Asset(_asset, Status.Open);\\n    }\\n\\n    function pauseEmp(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedEmps[id].status == Status.Open,\\n            \\\"Asset Manager: ASSET_NOT_OPEN\\\"\\n        );\\n        idToVerifiedEmps[id].status = Status.Paused;\\n    }\\n\\n    function unpauseEmp(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedEmps[id].status == Status.Paused,\\n            \\\"Asset Manager: ASSET_NOT_PAUSED\\\"\\n        );\\n        idToVerifiedEmps[id].status = Status.Open;\\n    }\\n\\n    function closeEmp(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedEmps[id].addr != address(0),\\n            \\\"Asset Manager: ZERO_ADDRESS\\\"\\n        );\\n        require(\\n            idToVerifiedEmps[id].status != Status.Closed,\\n            \\\"Asset Manager: ASSET_ALREADY_CLOSED\\\"\\n        );\\n        idToVerifiedEmps[id].status = Status.Closed;\\n    }\\n\\n    // Swap Pairs\\n    function addSwapPair(address _asset) external onlyOwner {\\n        require(_asset != address(0), \\\"Asset Manager: ZERO_ADDRESS\\\");\\n        totalSwapPairAssets = totalSwapPairAssets + 1;\\n        idToVerifiedSwapPairs[totalSwapPairAssets] = Asset(_asset, Status.Open);\\n    }\\n\\n    function pauseSwapPair(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedSwapPairs[id].status == Status.Open,\\n            \\\"Asset Manager: ASSET_NOT_OPEN\\\"\\n        );\\n        idToVerifiedSwapPairs[id].status = Status.Paused;\\n    }\\n\\n    function unpauseSwapPair(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedSwapPairs[id].status == Status.Paused,\\n            \\\"Asset Manager: ASSET_NOT_PAUSED\\\"\\n        );\\n        idToVerifiedSwapPairs[id].status = Status.Open;\\n    }\\n\\n    function closeSwapPair(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedSwapPairs[id].addr != address(0),\\n            \\\"Asset Manager: ZERO_ADDRESS\\\"\\n        );\\n        require(\\n            idToVerifiedSwapPairs[id].status != Status.Closed,\\n            \\\"Asset Manager: ASSET_ALREADY_CLOSED\\\"\\n        );\\n        idToVerifiedSwapPairs[id].status = Status.Closed;\\n    }\\n\\n    // Staking Rewards\\n    function addStakingReward(address _asset) external onlyOwner {\\n        require(_asset != address(0), \\\"Asset Manager: ZERO_ADDRESS\\\");\\n        totalStakingRewardAssets = totalStakingRewardAssets + 1;\\n        idToVerifiedStakingRewards[totalStakingRewardAssets] = Asset(\\n            _asset,\\n            Status.Open\\n        );\\n    }\\n\\n    function pauseStakingReward(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedStakingRewards[id].status == Status.Open,\\n            \\\"Asset Manager: ASSET_NOT_OPEN\\\"\\n        );\\n        idToVerifiedStakingRewards[id].status = Status.Paused;\\n    }\\n\\n    function unpauseStakingReward(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedStakingRewards[id].status == Status.Paused,\\n            \\\"Asset Manager: ASSET_NOT_PAUSED\\\"\\n        );\\n        idToVerifiedStakingRewards[id].status = Status.Open;\\n    }\\n\\n    function closeStakingReward(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedStakingRewards[id].addr != address(0),\\n            \\\"Asset Manager: ZERO_ADDRESS\\\"\\n        );\\n        require(\\n            idToVerifiedStakingRewards[id].status != Status.Closed,\\n            \\\"Asset Manager: ASSET_ALREADY_CLOSED\\\"\\n        );\\n        idToVerifiedStakingRewards[id].status = Status.Closed;\\n    }\\n}\\n\",\"keccak256\":\"0x986207c08de8e7f81ba952826dea61f88cec8a3fa0f65695ca491899720a3591\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d438061007e6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806366c0d6eb116100b8578063b7da168e1161007c578063b7da168e146102c4578063c232efdf146102d7578063c5cb09f1146102ea578063cff24bd4146102fd578063f2fde38b14610310578063f57813311461032357600080fd5b806366c0d6eb14610246578063715018a6146102595780638548872f146102615780638a856c99146102965780638da5cb5b146102a957600080fd5b80632982c520116100ff5780632982c520146101cf57806330c710fd146101d8578063603c206f146101eb57806362856e7a146101fe5780636317ae651461021157600080fd5b8062c0e2bb1461013b578063036ad6cd146101875780631c7fa0691461019c5780631fac0b92146101b3578063292fa1e2146101bc575b600080fd5b610170610149366004610b65565b6004602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b60405161017e929190610b94565b60405180910390f35b61019a610195366004610bcf565b610336565b005b6101a560055481565b60405190815260200161017e565b6101a560015481565b61019a6101ca366004610b65565b610402565b6101a560035481565b61019a6101e6366004610b65565b61047d565b61019a6101f9366004610bcf565b6104f5565b61019a61020c366004610b65565b6105a2565b61017061021f366004610b65565b6006602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b61019a610254366004610b65565b610619565b61019a610692565b61017061026f366004610b65565b6002602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b61019a6102a4366004610b65565b6106a6565b6000546040516001600160a01b03909116815260200161017e565b61019a6102d2366004610b65565b61074d565b61019a6102e5366004610bcf565b6107c4565b61019a6102f8366004610b65565b61087d565b61019a61030b366004610b65565b6108f4565b61019a61031e366004610bcf565b61099b565b61019a610331366004610b65565b610a14565b61033e610abb565b6001600160a01b03811661036d5760405162461bcd60e51b815260040161036490610bff565b60405180910390fd5b60035461037b906001610c36565b600355604080518082019091526001600160a01b038216815260208101600290526003546000908152600460209081526040909120825181546001600160a01b039091166001600160a01b031982168117835592840151919283916001600160a81b03191617600160a01b8360028111156103f8576103f8610b7e565b0217905550505050565b61040a610abb565b6001600082815260066020526040902054600160a01b900460ff16600281111561043657610436610b7e565b146104535760405162461bcd60e51b815260040161036490610c5c565b600081815260066020526040902080546002919060ff60a01b1916600160a01b835b021790555050565b610485610abb565b6001600082815260026020819052604090912054600160a01b900460ff16908111156104b3576104b3610b7e565b146104d05760405162461bcd60e51b815260040161036490610c5c565b6000818152600260208190526040909120805460ff60a01b1916600160a01b83610475565b6104fd610abb565b6001600160a01b0381166105235760405162461bcd60e51b815260040161036490610bff565b6001805461053091610c36565b60018190556040805180820182526001600160a01b03848116825260026020808401828152600096875290829052939094208251815492166001600160a01b031983168117825593519294909384926001600160a81b0319161790600160a01b9084908111156103f8576103f8610b7e565b6105aa610abb565b6001600082815260046020526040902054600160a01b900460ff1660028111156105d6576105d6610b7e565b146105f35760405162461bcd60e51b815260040161036490610c5c565b600081815260046020526040902080546002919060ff60a01b1916600160a01b83610475565b610621610abb565b6002600082815260026020819052604090912054600160a01b900460ff169081111561064f5761064f610b7e565b1461066c5760405162461bcd60e51b815260040161036490610c93565b600081815260026020526040902080546001919060ff60a01b1916600160a01b83610475565b61069a610abb565b6106a46000610b15565b565b6106ae610abb565b6000818152600460205260409020546001600160a01b03166106e25760405162461bcd60e51b815260040161036490610bff565b60008082815260046020526040902054600160a01b900460ff16600281111561070d5761070d610b7e565b141561072b5760405162461bcd60e51b815260040161036490610cca565b6000818152600460205260408120805460ff60a01b1916600160a01b83610475565b610755610abb565b6002600082815260066020526040902054600160a01b900460ff16600281111561078157610781610b7e565b1461079e5760405162461bcd60e51b815260040161036490610c93565b600081815260066020526040902080546001919060ff60a01b1916600160a01b83610475565b6107cc610abb565b6001600160a01b0381166107f25760405162461bcd60e51b815260040161036490610bff565b600554610800906001610c36565b600555604080518082019091526001600160a01b038216815260208101600290526005546000908152600660209081526040909120825181546001600160a01b039091166001600160a01b031982168117835592840151919283916001600160a81b03191617600160a01b8360028111156103f8576103f8610b7e565b610885610abb565b6002600082815260046020526040902054600160a01b900460ff1660028111156108b1576108b1610b7e565b146108ce5760405162461bcd60e51b815260040161036490610c93565b600081815260046020526040902080546001919060ff60a01b1916600160a01b83610475565b6108fc610abb565b6000818152600660205260409020546001600160a01b03166109305760405162461bcd60e51b815260040161036490610bff565b60008082815260066020526040902054600160a01b900460ff16600281111561095b5761095b610b7e565b14156109795760405162461bcd60e51b815260040161036490610cca565b6000818152600660205260408120805460ff60a01b1916600160a01b83610475565b6109a3610abb565b6001600160a01b038116610a085760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610364565b610a1181610b15565b50565b610a1c610abb565b6000818152600260205260409020546001600160a01b0316610a505760405162461bcd60e51b815260040161036490610bff565b6000818152600260208190526040822054600160a01b900460ff1690811115610a7b57610a7b610b7e565b1415610a995760405162461bcd60e51b815260040161036490610cca565b6000818152600260205260408120805460ff60a01b1916600160a01b83610475565b6000546001600160a01b031633146106a45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610364565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610b7757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03831681526040810160038310610bc257634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b600060208284031215610be157600080fd5b81356001600160a01b0381168114610bf857600080fd5b9392505050565b6020808252601b908201527f4173736574204d616e616765723a205a45524f5f414444524553530000000000604082015260600190565b60008219821115610c5757634e487b7160e01b600052601160045260246000fd5b500190565b6020808252601f908201527f4173736574204d616e616765723a2041535345545f4e4f545f50415553454400604082015260600190565b6020808252601d908201527f4173736574204d616e616765723a2041535345545f4e4f545f4f50454e000000604082015260600190565b60208082526023908201527f4173736574204d616e616765723a2041535345545f414c52454144595f434c4f60408201526214d15160ea1b60608201526080019056fea264697066735822122065ed4461c74a8f0b5bdedd254b397ef72260e2cc0888b49a96754a35cbafb91364736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c806366c0d6eb116100b8578063b7da168e1161007c578063b7da168e146102c4578063c232efdf146102d7578063c5cb09f1146102ea578063cff24bd4146102fd578063f2fde38b14610310578063f57813311461032357600080fd5b806366c0d6eb14610246578063715018a6146102595780638548872f146102615780638a856c99146102965780638da5cb5b146102a957600080fd5b80632982c520116100ff5780632982c520146101cf57806330c710fd146101d8578063603c206f146101eb57806362856e7a146101fe5780636317ae651461021157600080fd5b8062c0e2bb1461013b578063036ad6cd146101875780631c7fa0691461019c5780631fac0b92146101b3578063292fa1e2146101bc575b600080fd5b610170610149366004610b65565b6004602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b60405161017e929190610b94565b60405180910390f35b61019a610195366004610bcf565b610336565b005b6101a560055481565b60405190815260200161017e565b6101a560015481565b61019a6101ca366004610b65565b610402565b6101a560035481565b61019a6101e6366004610b65565b61047d565b61019a6101f9366004610bcf565b6104f5565b61019a61020c366004610b65565b6105a2565b61017061021f366004610b65565b6006602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b61019a610254366004610b65565b610619565b61019a610692565b61017061026f366004610b65565b6002602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b61019a6102a4366004610b65565b6106a6565b6000546040516001600160a01b03909116815260200161017e565b61019a6102d2366004610b65565b61074d565b61019a6102e5366004610bcf565b6107c4565b61019a6102f8366004610b65565b61087d565b61019a61030b366004610b65565b6108f4565b61019a61031e366004610bcf565b61099b565b61019a610331366004610b65565b610a14565b61033e610abb565b6001600160a01b03811661036d5760405162461bcd60e51b815260040161036490610bff565b60405180910390fd5b60035461037b906001610c36565b600355604080518082019091526001600160a01b038216815260208101600290526003546000908152600460209081526040909120825181546001600160a01b039091166001600160a01b031982168117835592840151919283916001600160a81b03191617600160a01b8360028111156103f8576103f8610b7e565b0217905550505050565b61040a610abb565b6001600082815260066020526040902054600160a01b900460ff16600281111561043657610436610b7e565b146104535760405162461bcd60e51b815260040161036490610c5c565b600081815260066020526040902080546002919060ff60a01b1916600160a01b835b021790555050565b610485610abb565b6001600082815260026020819052604090912054600160a01b900460ff16908111156104b3576104b3610b7e565b146104d05760405162461bcd60e51b815260040161036490610c5c565b6000818152600260208190526040909120805460ff60a01b1916600160a01b83610475565b6104fd610abb565b6001600160a01b0381166105235760405162461bcd60e51b815260040161036490610bff565b6001805461053091610c36565b60018190556040805180820182526001600160a01b03848116825260026020808401828152600096875290829052939094208251815492166001600160a01b031983168117825593519294909384926001600160a81b0319161790600160a01b9084908111156103f8576103f8610b7e565b6105aa610abb565b6001600082815260046020526040902054600160a01b900460ff1660028111156105d6576105d6610b7e565b146105f35760405162461bcd60e51b815260040161036490610c5c565b600081815260046020526040902080546002919060ff60a01b1916600160a01b83610475565b610621610abb565b6002600082815260026020819052604090912054600160a01b900460ff169081111561064f5761064f610b7e565b1461066c5760405162461bcd60e51b815260040161036490610c93565b600081815260026020526040902080546001919060ff60a01b1916600160a01b83610475565b61069a610abb565b6106a46000610b15565b565b6106ae610abb565b6000818152600460205260409020546001600160a01b03166106e25760405162461bcd60e51b815260040161036490610bff565b60008082815260046020526040902054600160a01b900460ff16600281111561070d5761070d610b7e565b141561072b5760405162461bcd60e51b815260040161036490610cca565b6000818152600460205260408120805460ff60a01b1916600160a01b83610475565b610755610abb565b6002600082815260066020526040902054600160a01b900460ff16600281111561078157610781610b7e565b1461079e5760405162461bcd60e51b815260040161036490610c93565b600081815260066020526040902080546001919060ff60a01b1916600160a01b83610475565b6107cc610abb565b6001600160a01b0381166107f25760405162461bcd60e51b815260040161036490610bff565b600554610800906001610c36565b600555604080518082019091526001600160a01b038216815260208101600290526005546000908152600660209081526040909120825181546001600160a01b039091166001600160a01b031982168117835592840151919283916001600160a81b03191617600160a01b8360028111156103f8576103f8610b7e565b610885610abb565b6002600082815260046020526040902054600160a01b900460ff1660028111156108b1576108b1610b7e565b146108ce5760405162461bcd60e51b815260040161036490610c93565b600081815260046020526040902080546001919060ff60a01b1916600160a01b83610475565b6108fc610abb565b6000818152600660205260409020546001600160a01b03166109305760405162461bcd60e51b815260040161036490610bff565b60008082815260066020526040902054600160a01b900460ff16600281111561095b5761095b610b7e565b14156109795760405162461bcd60e51b815260040161036490610cca565b6000818152600660205260408120805460ff60a01b1916600160a01b83610475565b6109a3610abb565b6001600160a01b038116610a085760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610364565b610a1181610b15565b50565b610a1c610abb565b6000818152600260205260409020546001600160a01b0316610a505760405162461bcd60e51b815260040161036490610bff565b6000818152600260208190526040822054600160a01b900460ff1690811115610a7b57610a7b610b7e565b1415610a995760405162461bcd60e51b815260040161036490610cca565b6000818152600260205260408120805460ff60a01b1916600160a01b83610475565b6000546001600160a01b031633146106a45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610364565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610b7757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03831681526040810160038310610bc257634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b600060208284031215610be157600080fd5b81356001600160a01b0381168114610bf857600080fd5b9392505050565b6020808252601b908201527f4173736574204d616e616765723a205a45524f5f414444524553530000000000604082015260600190565b60008219821115610c5757634e487b7160e01b600052601160045260246000fd5b500190565b6020808252601f908201527f4173736574204d616e616765723a2041535345545f4e4f545f50415553454400604082015260600190565b6020808252601d908201527f4173736574204d616e616765723a2041535345545f4e4f545f4f50454e000000604082015260600190565b60208082526023908201527f4173736574204d616e616765723a2041535345545f414c52454144595f434c4f60408201526214d15160ea1b60608201526080019056fea264697066735822122065ed4461c74a8f0b5bdedd254b397ef72260e2cc0888b49a96754a35cbafb91364736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 400,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2621,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "totalEmpAssets",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 2626,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "idToVerifiedEmps",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Asset)2650_storage)"
      },
      {
        "astId": 2628,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "totalSwapPairAssets",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2633,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "idToVerifiedSwapPairs",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Asset)2650_storage)"
      },
      {
        "astId": 2635,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "totalStakingRewardAssets",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 2640,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "idToVerifiedStakingRewards",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Asset)2650_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(Status)2644": {
        "encoding": "inplace",
        "label": "enum AssetManager.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(Asset)2650_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct AssetManager.Asset)",
        "numberOfBytes": "32",
        "value": "t_struct(Asset)2650_storage"
      },
      "t_struct(Asset)2650_storage": {
        "encoding": "inplace",
        "label": "struct AssetManager.Asset",
        "members": [
          {
            "astId": 2646,
            "contract": "contracts/AssetManager.sol:AssetManager",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2649,
            "contract": "contracts/AssetManager.sol:AssetManager",
            "label": "status",
            "offset": 20,
            "slot": "0",
            "type": "t_enum(Status)2644"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
{
  "address": "0xD36449269DcC99b8aB352325C701CEb41f8bfDFe",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IClayToken",
          "name": "_clay",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maximumBondRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "daysLeftToMaturationDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardPercent",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "Issued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "APY_PERCENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BONDS_ISSUANCE_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MATURATION_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_ISSUANCE_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clay",
      "outputs": [
        {
          "internalType": "contract IClayToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dailyYieldPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositCloseDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDaysLeftToMaturationDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "daysLeftToMaturationDate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardPercent",
          "type": "uint256"
        }
      ],
      "name": "getReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "daysLeftToMaturationDate",
          "type": "uint256"
        }
      ],
      "name": "getRewardPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewardPercent",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_clayAmount",
          "type": "uint256"
        }
      ],
      "name": "issue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bondAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturationDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maximumBondRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBondDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9f67632b757a7f8a5ea270277d2c70d425d709764620ba314ec654f94386435d",
  "receipt": {
    "to": "0xf05C8984A9F9cc5d3981d852331895220D09CDC8",
    "from": "0x23E4Be4EFB4ca92a940F4133c0677181Cb457bff",
    "contractAddress": "0xD36449269DcC99b8aB352325C701CEb41f8bfDFe",
    "transactionIndex": 120,
    "gasUsed": "1420317",
    "logsBloom": "0x00000000400000000000000000000000000000000000000000802000040020000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000020000000001000000000000000000000000000000000000020000000000000000000800000400000020000000000000000000400000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000004000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000020000000000000000000000002080000000000000000800000000000000400000000",
    "blockHash": "0x970a1bb5c6d9a83e977ccba2b5a68a52ab514194e79f4123bd86a4b41658ca6d",
    "transactionHash": "0x9f67632b757a7f8a5ea270277d2c70d425d709764620ba314ec654f94386435d",
    "logs": [
      {
        "transactionIndex": 120,
        "blockNumber": 17385811,
        "transactionHash": "0x9f67632b757a7f8a5ea270277d2c70d425d709764620ba314ec654f94386435d",
        "address": "0xD36449269DcC99b8aB352325C701CEb41f8bfDFe",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f05c8984a9f9cc5d3981d852331895220d09cdc8"
        ],
        "data": "0x",
        "logIndex": 287,
        "blockHash": "0x970a1bb5c6d9a83e977ccba2b5a68a52ab514194e79f4123bd86a4b41658ca6d"
      },
      {
        "transactionIndex": 120,
        "blockNumber": 17385811,
        "transactionHash": "0x9f67632b757a7f8a5ea270277d2c70d425d709764620ba314ec654f94386435d",
        "address": "0xf05C8984A9F9cc5d3981d852331895220D09CDC8",
        "topics": [
          "0x4db17dd5e4732fb6da34a148104a592783ca119a1e7bb8829eba6cbadef0b511"
        ],
        "data": "0x000000000000000000000000d36449269dcc99b8ab352325c701ceb41f8bfdfe",
        "logIndex": 288,
        "blockHash": "0x970a1bb5c6d9a83e977ccba2b5a68a52ab514194e79f4123bd86a4b41658ca6d"
      },
      {
        "transactionIndex": 120,
        "blockNumber": 17385811,
        "transactionHash": "0x9f67632b757a7f8a5ea270277d2c70d425d709764620ba314ec654f94386435d",
        "address": "0xf05C8984A9F9cc5d3981d852331895220D09CDC8",
        "topics": [
          "0x442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e"
        ],
        "data": "0xb30d033bc8f1f536ac1a508e58482e026c23044c088ac925b4e1d87966bb2b1a0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 289,
        "blockHash": "0x970a1bb5c6d9a83e977ccba2b5a68a52ab514194e79f4123bd86a4b41658ca6d"
      }
    ],
    "blockNumber": 17385811,
    "cumulativeGasUsed": "11594476",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB441859e44F19754eE79AFA91b081620dDFE269f",
    "50000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "f8525ec687ca29001b0ace9d4d753876",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IClayToken\",\"name\":\"_clay\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maximumBondRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"daysLeftToMaturationDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPercent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Issued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"APY_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BONDS_ISSUANCE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MATURATION_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_ISSUANCE_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clay\",\"outputs\":[{\"internalType\":\"contract IClayToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyYieldPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositCloseDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDaysLeftToMaturationDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"daysLeftToMaturationDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPercent\",\"type\":\"uint256\"}],\"name\":\"getReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"daysLeftToMaturationDate\",\"type\":\"uint256\"}],\"name\":\"getRewardPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardPercent\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_clayAmount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturationDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumBondRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBondDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn()\":{\"details\":\"Burns the remaining Clay in the contract*\"},\"claim()\":{\"details\":\"Burns zClay and returns the underlying Clay tokens*\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"issue(uint256)\":{\"params\":{\"_clayAmount\":\"The amount of CLAY deposited\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"issue(uint256)\":{\"notice\":\"Issues a zCLAY Bond depending on the amount of CLAY deposited and the current APY which depends on the time elapsed since bond programme inception\"}},\"notice\":\"You can deposit CLAY (ERC20 token native to Sumero) to get zCLAY Bonds (a new ERC20 representing the bond). These zCLAY Bonds can be minted upto 180 days from depositStartDate. The bonds will mature after a period of 2 years (i.e. 731 days, taking into account extra leap day for 2024) from the depositStartDate. There is a \\\"APY\\\" (Annual Percentage Yield) of 50% on the zCLAY Bonds that is constantly decreasing as the deposit  close date is nearing (i.e. from a maximum of 50% to 0%). Example: - User deposits 1 Clay and issues a zCLAY Bond on Day 1 of bond start date - [(deposit close timestamp - block timestamp) / (1 year in seconds) * APY] - User gets 2 zCLAY Bond (APY (50%) for next 2 years i.e 100% total interest) - 1 + (100% of 1) => 1 + 1 => 2 The user can claim the zCLAY Bonds for equivalent value of CLAY after the maturation date. The user has to lock his CLAY in to zCLAY bonds for atleast 2 years. They are open to trade these bonds on a secondary market (i.e. via LP pools on Sumero)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ClayBonds.sol\":\"ClayBonds\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/ClayBonds.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IClayToken.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n    You can deposit CLAY (ERC20 token native to Sumero) to get zCLAY Bonds (a new ERC20 representing the bond).\\n\\n    These zCLAY Bonds can be minted upto 180 days from depositStartDate.\\n    The bonds will mature after a period of 2 years (i.e. 731 days, taking into account extra leap day for 2024) from the depositStartDate.\\n\\n    There is a \\\"APY\\\" (Annual Percentage Yield) of 50% on the zCLAY Bonds that is constantly decreasing as the deposit \\n    close date is nearing (i.e. from a maximum of 50% to 0%).\\n\\n    Example:\\n\\n    - User deposits 1 Clay and issues a zCLAY Bond on Day 1 of bond start date\\n    - [(deposit close timestamp - block timestamp) / (1 year in seconds) * APY]\\n    - User gets 2 zCLAY Bond (APY (50%) for next 2 years i.e 100% total interest)\\n    - 1 + (100% of 1) => 1 + 1 => 2\\n    \\n    The user can claim the zCLAY Bonds for equivalent value of CLAY after the maturation date.\\n    The user has to lock his CLAY in to zCLAY bonds for atleast 2 years. They are open to trade these bonds on a secondary market (i.e. via LP pools on Sumero)\\n */\\ncontract ClayBonds is ERC20(\\\"zClay Token\\\", \\\"zCLAY\\\"), Ownable {\\n    IClayToken public clay;\\n\\n    // the maximum upper limit of bond rewards that this contract will give over it's lifetime\\n    uint256 public immutable maximumBondRewards;\\n    // total zCLAY bonds locked into the contract\\n    uint256 public totalBondDeposits;\\n\\n    uint256 public immutable depositStartDate;\\n    uint256 public immutable depositCloseDate;\\n    uint256 public immutable maturationDate;\\n\\n    uint256 public immutable dailyYieldPercent;\\n\\n    uint256 public constant APY_PERCENT = 50;\\n\\n    uint256 public constant BONDS_ISSUANCE_PERIOD = 180 days;\\n    // Adding an extra day to account for extra day in leap year 2024\\n    uint256 public constant MATURATION_PERIOD = ((1 days * 365) * 2) + 1;\\n\\n    // minimum staking amount must be 100 wei\\n    uint256 public constant MIN_ISSUANCE_AMOUNT = 100;\\n\\n    constructor(IClayToken _clay, uint256 _maximumBondRewards) {\\n        require(address(_clay) != address(0), \\\"ClayBonds: ZERO_ADDRESS\\\");\\n        clay = _clay;\\n        maximumBondRewards = _maximumBondRewards;\\n        depositStartDate = block.timestamp;\\n\\n        // deposit close date is 180 days in future\\n        depositCloseDate = block.timestamp + BONDS_ISSUANCE_PERIOD;\\n        // maturation date of bond is 2 years in future\\n        maturationDate = block.timestamp + MATURATION_PERIOD;\\n\\n        // calculate daily yield\\n        // APY details can be taken as constructor argument\\n        dailyYieldPercent = (APY_PERCENT * (1 ether)) / 365;\\n    }\\n\\n    function getDaysLeftToMaturationDate()\\n        public\\n        view\\n        returns (uint256 daysLeftToMaturationDate)\\n    {\\n        if (maturationDate < block.timestamp) {\\n            return 0; // just return 0 instead of dealing with negatives\\n        }\\n        // calculate days remaining till maturation day\\n        daysLeftToMaturationDate =\\n            (maturationDate - block.timestamp) /\\n            (1 days);\\n    }\\n\\n    function getRewardPercent(uint256 daysLeftToMaturationDate)\\n        public\\n        view\\n        returns (uint256 rewardPercent)\\n    {\\n        // Total Percentage Reward => dailyYieldPercent * daysLeftToMaturationDate\\n        // adding 1 here to consider interest for the current ongoing day\\n        rewardPercent = dailyYieldPercent * (daysLeftToMaturationDate + 1);\\n    }\\n\\n    function getReward(uint256 _amount, uint256 _rewardPercent)\\n        public\\n        pure\\n        returns (uint256 reward)\\n    {\\n        // bondAmount => amount + (total percentage reward * amount)\\n        reward = ((_amount * _rewardPercent) / 100) / 1 ether;\\n    }\\n\\n    /**\\n     * Issues a zCLAY Bond depending on the amount of CLAY deposited and the current APY which depends on the time elapsed since bond programme inception\\n     * @param _clayAmount The amount of CLAY deposited\\n     */\\n    function issue(uint256 _clayAmount) external returns (uint256 bondAmount) {\\n        require(\\n            _clayAmount > MIN_ISSUANCE_AMOUNT,\\n            \\\"ClayBonds: INSUFFICIENT_AMOUNT\\\"\\n        );\\n        require(\\n            block.timestamp >= depositStartDate,\\n            \\\"ClayBonds: DEPOSIT_NOT_YET_STARTED\\\"\\n        );\\n        require(\\n            block.timestamp < depositCloseDate,\\n            \\\"ClayBonds: DEPOSIT_CLOSED\\\"\\n        );\\n\\n        uint256 daysLeftToMaturationDate = getDaysLeftToMaturationDate();\\n        uint256 rewardPercent = getRewardPercent(daysLeftToMaturationDate);\\n        uint256 reward = getReward(_clayAmount, rewardPercent);\\n\\n        bondAmount = _clayAmount + reward;\\n\\n        bool success = clay.transferFrom(\\n            msg.sender,\\n            address(this),\\n            _clayAmount\\n        );\\n        require(success, \\\"ClayBonds: TRANSFER_FAILED\\\");\\n        _mint(msg.sender, bondAmount);\\n\\n        totalBondDeposits = totalBondDeposits + bondAmount;\\n\\n        require(\\n            totalBondDeposits <= maximumBondRewards,\\n            \\\"ClayBonds: MAX_BOND_REWARD_POOL_REACHED\\\"\\n        );\\n\\n        emit Issued(\\n            msg.sender,\\n            _clayAmount,\\n            daysLeftToMaturationDate,\\n            rewardPercent,\\n            reward\\n        );\\n    }\\n\\n    /**\\n     * @dev Burns zClay and returns the underlying Clay tokens\\n     **/\\n    function claim() external {\\n        require(\\n            maturationDate <= block.timestamp,\\n            \\\"ClayBonds: BOND_NOT_MATURED\\\"\\n        );\\n        uint256 balance = balanceOf(msg.sender);\\n        require(balance > 0, \\\"ClayBonds: BALANCE_IS_ZERO\\\");\\n        _burn(msg.sender, balance);\\n        clay.mint(msg.sender, balance);\\n        emit Claimed(msg.sender, balance);\\n    }\\n\\n    /**\\n     * @dev Burns the remaining Clay in the contract\\n     **/\\n    function burn() external onlyOwner {\\n        require(\\n            maturationDate <= block.timestamp,\\n            \\\"ClayBonds: BOND_NOT_MATURED\\\"\\n        );\\n        uint256 clayBalance = clay.balanceOf(address(this));\\n        clay.burn(address(this), clayBalance);\\n        emit Burned(clayBalance);\\n    }\\n\\n    /* ========== EVENTS ========== */\\n    event Issued(\\n        address indexed user,\\n        uint256 amount,\\n        uint256 daysLeftToMaturationDate,\\n        uint256 rewardPercent,\\n        uint256 reward\\n    );\\n    event Claimed(address indexed user, uint256 balance);\\n    event Burned(uint256 amount);\\n}\\n\",\"keccak256\":\"0x13b908c6799bd2b9ab15eaea01b2db0f02493ba79ab7e00c4e64441db6088495\",\"license\":\"MIT\"},\"contracts/interfaces/IClayToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the Clay Token.\\n */\\ninterface IClayToken {\\n    function mint(address account, uint256 amount) external;\\n\\n    function burn(address account, uint256 amount) external;\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x5809cc044db90f05598a789ff174e0e310fae296f5d9601801debd626f2720cd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101206040523480156200001257600080fd5b5060405162001a9138038062001a918339810160408190526200003591620001e2565b6040518060400160405280600b81526020016a3d21b630bc902a37b5b2b760a91b815250604051806040016040528060058152602001647a434c415960d81b8152508160039081620000889190620002c3565b506004620000978282620002c3565b505050620000b4620000ae6200018c60201b60201c565b62000190565b6001600160a01b0382166200010f5760405162461bcd60e51b815260206004820152601760248201527f436c6179426f6e64733a205a45524f5f41444452455353000000000000000000604482015260640160405180910390fd5b600680546001600160a01b0319166001600160a01b03841617905560808190524260a0819052620001459062ed4e0090620003a5565b60c052620001586303c2670142620003a5565b60e05261016d620001736032670de0b6b3a7640000620003c1565b6200017f9190620003e3565b6101005250620004069050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008060408385031215620001f657600080fd5b82516001600160a01b03811681146200020e57600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200024957607f821691505b6020821081036200026a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002be57600081815260208120601f850160051c81016020861015620002995750805b601f850160051c820191505b81811015620002ba57828155600101620002a5565b5050505b505050565b81516001600160401b03811115620002df57620002df6200021e565b620002f781620002f0845462000234565b8462000270565b602080601f8311600181146200032f5760008415620003165750858301515b600019600386901b1c1916600185901b178555620002ba565b600085815260208120601f198616915b8281101562000360578886015182559484019460019091019084016200033f565b50858210156200037f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b80820180821115620003bb57620003bb6200038f565b92915050565b6000816000190483118215151615620003de57620003de6200038f565b500290565b6000826200040157634e487b7160e01b600052601260045260246000fd5b500490565b60805160a05160c05160e0516101005161160e62000483600039600081816102810152610703015260008181610417015281816105700152818161072a0152818161089f01526108d40152600081816103740152610ab40152600081816104510152610a390152600081816103dd0152610c41015261160e6000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063792256991161010f578063b90bc519116100a2578063dd62ed3e11610071578063dd62ed3e146103ff578063ec1f5a9714610412578063f2fde38b14610439578063ff6bca691461044c57600080fd5b8063b90bc519146103a9578063cc872b66146103bc578063d66f0acb146103cf578063d6afbfd0146103d857600080fd5b8063a457c2d7116100de578063a457c2d714610349578063a4d60c7c1461035c578063a60872201461036f578063a9059cbb1461039657600080fd5b8063792256991461030a5780638da5cb5b1461031257806395d89b411461033757806398975e851461033f57600080fd5b80634aec1928116101875780635140af3f116101565780635140af3f146102c957806370a08231146102d1578063715018a6146102fa57806377291df81461030257600080fd5b80634aec19281461027c5780634e68d114146102a35780634e71d92d146102b65780634ff02691146102be57600080fd5b806323b872dd116101c357806323b872dd1461023d578063313ce56714610250578063395093511461025f57806344df8e701461027257600080fd5b806306fdde03146101ea578063095ea7b31461020857806318160ddd1461022b575b600080fd5b6101f2610473565b6040516101ff919061138d565b60405180910390f35b61021b6102163660046113f7565b610505565b60405190151581526020016101ff565b6002545b6040519081526020016101ff565b61021b61024b366004611421565b61051f565b604051601281526020016101ff565b61021b61026d3660046113f7565b610543565b61027a610565565b005b61022f7f000000000000000000000000000000000000000000000000000000000000000081565b61022f6102b136600461145d565b6106f0565b61027a610727565b61022f6303c2670181565b61022f61089a565b61022f6102df366004611476565b6001600160a01b031660009081526020819052604090205490565b61027a610907565b61022f606481565b61022f603281565b6005546001600160a01b03165b6040516001600160a01b0390911681526020016101ff565b6101f261091b565b61022f62ed4e0081565b61021b6103573660046113f7565b61092a565b60065461031f906001600160a01b031681565b61022f7f000000000000000000000000000000000000000000000000000000000000000081565b61021b6103a43660046113f7565b6109a5565b61022f6103b7366004611491565b6109b3565b61022f6103ca36600461145d565b6109e5565b61022f60075481565b61022f7f000000000000000000000000000000000000000000000000000000000000000081565b61022f61040d3660046114b3565b610d11565b61022f7f000000000000000000000000000000000000000000000000000000000000000081565b61027a610447366004611476565b610d3c565b61022f7f000000000000000000000000000000000000000000000000000000000000000081565b606060038054610482906114e6565b80601f01602080910402602001604051908101604052809291908181526020018280546104ae906114e6565b80156104fb5780601f106104d0576101008083540402835291602001916104fb565b820191906000526020600020905b8154815290600101906020018083116104de57829003601f168201915b5050505050905090565b600033610513818585610db5565b60019150505b92915050565b60003361052d858285610eda565b610538858585610f54565b506001949350505050565b6000336105138185856105568383610d11565b6105609190611536565b610db5565b61056d6110f8565b427f000000000000000000000000000000000000000000000000000000000000000011156105e25760405162461bcd60e51b815260206004820152601b60248201527f436c6179426f6e64733a20424f4e445f4e4f545f4d415455524544000000000060448201526064015b60405180910390fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f9190611549565b600654604051632770a7eb60e21b8152306004820152602481018390529192506001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561069c57600080fd5b505af11580156106b0573d6000803e3d6000fd5b505050507fd83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e816040516106e591815260200190565b60405180910390a150565b60006106fd826001611536565b610519907f0000000000000000000000000000000000000000000000000000000000000000611562565b427f000000000000000000000000000000000000000000000000000000000000000011156107975760405162461bcd60e51b815260206004820152601b60248201527f436c6179426f6e64733a20424f4e445f4e4f545f4d415455524544000000000060448201526064016105d9565b33600090815260208190526040902054806107f45760405162461bcd60e51b815260206004820152601a60248201527f436c6179426f6e64733a2042414c414e43455f49535f5a45524f00000000000060448201526064016105d9565b6107fe3382611152565b6006546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561084a57600080fd5b505af115801561085e573d6000803e3d6000fd5b50506040518381523392507fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a915060200160405180910390a250565b6000427f000000000000000000000000000000000000000000000000000000000000000010156108ca5750600090565b620151806108f8427f0000000000000000000000000000000000000000000000000000000000000000611581565b6109029190611594565b905090565b61090f6110f8565b610919600061127c565b565b606060048054610482906114e6565b600033816109388286610d11565b9050838110156109985760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105d9565b6105388286868403610db5565b600033610513818585610f54565b6000670de0b6b3a764000060646109ca8486611562565b6109d49190611594565b6109de9190611594565b9392505050565b600060648211610a375760405162461bcd60e51b815260206004820152601e60248201527f436c6179426f6e64733a20494e53554646494349454e545f414d4f554e54000060448201526064016105d9565b7f0000000000000000000000000000000000000000000000000000000000000000421015610ab25760405162461bcd60e51b815260206004820152602260248201527f436c6179426f6e64733a204445504f5349545f4e4f545f5945545f5354415254604482015261115160f21b60648201526084016105d9565b7f00000000000000000000000000000000000000000000000000000000000000004210610b215760405162461bcd60e51b815260206004820152601960248201527f436c6179426f6e64733a204445504f5349545f434c4f5345440000000000000060448201526064016105d9565b6000610b2b61089a565b90506000610b38826106f0565b90506000610b4685836109b3565b9050610b528186611536565b6006546040516323b872dd60e01b8152336004820152306024820152604481018890529195506000916001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd391906115b6565b905080610c225760405162461bcd60e51b815260206004820152601a60248201527f436c6179426f6e64733a205452414e534645525f4641494c454400000000000060448201526064016105d9565b610c2c33866112ce565b84600754610c3a9190611536565b60078190557f00000000000000000000000000000000000000000000000000000000000000001015610cbe5760405162461bcd60e51b815260206004820152602760248201527f436c6179426f6e64733a204d41585f424f4e445f5245574152445f504f4f4c5f60448201526614915050d2115160ca1b60648201526084016105d9565b60408051878152602081018690529081018490526060810183905233907f374a351db3f664ea453a7ce5668a042151e5aac07bf62f30d35defd0a019b0be9060800160405180910390a250505050919050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610d446110f8565b6001600160a01b038116610da95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d9565b610db28161127c565b50565b6001600160a01b038316610e175760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105d9565b6001600160a01b038216610e785760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105d9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610ee68484610d11565b90506000198114610f4e5781811015610f415760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105d9565b610f4e8484848403610db5565b50505050565b6001600160a01b038316610fb85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105d9565b6001600160a01b03821661101a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105d9565b6001600160a01b038316600090815260208190526040902054818110156110925760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105d9565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610f4e565b6005546001600160a01b031633146109195760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d9565b6001600160a01b0382166111b25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105d9565b6001600160a01b038216600090815260208190526040902054818110156112265760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105d9565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610ecd565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166113245760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105d9565b80600260008282546113369190611536565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156113ba5785810183015185820160400152820161139e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146113f257600080fd5b919050565b6000806040838503121561140a57600080fd5b611413836113db565b946020939093013593505050565b60008060006060848603121561143657600080fd5b61143f846113db565b925061144d602085016113db565b9150604084013590509250925092565b60006020828403121561146f57600080fd5b5035919050565b60006020828403121561148857600080fd5b6109de826113db565b600080604083850312156114a457600080fd5b50508035926020909101359150565b600080604083850312156114c657600080fd5b6114cf836113db565b91506114dd602084016113db565b90509250929050565b600181811c908216806114fa57607f821691505b60208210810361151a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561051957610519611520565b60006020828403121561155b57600080fd5b5051919050565b600081600019048311821515161561157c5761157c611520565b500290565b8181038181111561051957610519611520565b6000826115b157634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156115c857600080fd5b815180151581146109de57600080fdfea264697066735822122085ecc845fed30f0d1ac6f3ad4863433875ccf9d367dfac07e38afba9dc1f1a1264736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c8063792256991161010f578063b90bc519116100a2578063dd62ed3e11610071578063dd62ed3e146103ff578063ec1f5a9714610412578063f2fde38b14610439578063ff6bca691461044c57600080fd5b8063b90bc519146103a9578063cc872b66146103bc578063d66f0acb146103cf578063d6afbfd0146103d857600080fd5b8063a457c2d7116100de578063a457c2d714610349578063a4d60c7c1461035c578063a60872201461036f578063a9059cbb1461039657600080fd5b8063792256991461030a5780638da5cb5b1461031257806395d89b411461033757806398975e851461033f57600080fd5b80634aec1928116101875780635140af3f116101565780635140af3f146102c957806370a08231146102d1578063715018a6146102fa57806377291df81461030257600080fd5b80634aec19281461027c5780634e68d114146102a35780634e71d92d146102b65780634ff02691146102be57600080fd5b806323b872dd116101c357806323b872dd1461023d578063313ce56714610250578063395093511461025f57806344df8e701461027257600080fd5b806306fdde03146101ea578063095ea7b31461020857806318160ddd1461022b575b600080fd5b6101f2610473565b6040516101ff919061138d565b60405180910390f35b61021b6102163660046113f7565b610505565b60405190151581526020016101ff565b6002545b6040519081526020016101ff565b61021b61024b366004611421565b61051f565b604051601281526020016101ff565b61021b61026d3660046113f7565b610543565b61027a610565565b005b61022f7f000000000000000000000000000000000000000000000000000000000000000081565b61022f6102b136600461145d565b6106f0565b61027a610727565b61022f6303c2670181565b61022f61089a565b61022f6102df366004611476565b6001600160a01b031660009081526020819052604090205490565b61027a610907565b61022f606481565b61022f603281565b6005546001600160a01b03165b6040516001600160a01b0390911681526020016101ff565b6101f261091b565b61022f62ed4e0081565b61021b6103573660046113f7565b61092a565b60065461031f906001600160a01b031681565b61022f7f000000000000000000000000000000000000000000000000000000000000000081565b61021b6103a43660046113f7565b6109a5565b61022f6103b7366004611491565b6109b3565b61022f6103ca36600461145d565b6109e5565b61022f60075481565b61022f7f000000000000000000000000000000000000000000000000000000000000000081565b61022f61040d3660046114b3565b610d11565b61022f7f000000000000000000000000000000000000000000000000000000000000000081565b61027a610447366004611476565b610d3c565b61022f7f000000000000000000000000000000000000000000000000000000000000000081565b606060038054610482906114e6565b80601f01602080910402602001604051908101604052809291908181526020018280546104ae906114e6565b80156104fb5780601f106104d0576101008083540402835291602001916104fb565b820191906000526020600020905b8154815290600101906020018083116104de57829003601f168201915b5050505050905090565b600033610513818585610db5565b60019150505b92915050565b60003361052d858285610eda565b610538858585610f54565b506001949350505050565b6000336105138185856105568383610d11565b6105609190611536565b610db5565b61056d6110f8565b427f000000000000000000000000000000000000000000000000000000000000000011156105e25760405162461bcd60e51b815260206004820152601b60248201527f436c6179426f6e64733a20424f4e445f4e4f545f4d415455524544000000000060448201526064015b60405180910390fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f9190611549565b600654604051632770a7eb60e21b8152306004820152602481018390529192506001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561069c57600080fd5b505af11580156106b0573d6000803e3d6000fd5b505050507fd83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e816040516106e591815260200190565b60405180910390a150565b60006106fd826001611536565b610519907f0000000000000000000000000000000000000000000000000000000000000000611562565b427f000000000000000000000000000000000000000000000000000000000000000011156107975760405162461bcd60e51b815260206004820152601b60248201527f436c6179426f6e64733a20424f4e445f4e4f545f4d415455524544000000000060448201526064016105d9565b33600090815260208190526040902054806107f45760405162461bcd60e51b815260206004820152601a60248201527f436c6179426f6e64733a2042414c414e43455f49535f5a45524f00000000000060448201526064016105d9565b6107fe3382611152565b6006546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561084a57600080fd5b505af115801561085e573d6000803e3d6000fd5b50506040518381523392507fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a915060200160405180910390a250565b6000427f000000000000000000000000000000000000000000000000000000000000000010156108ca5750600090565b620151806108f8427f0000000000000000000000000000000000000000000000000000000000000000611581565b6109029190611594565b905090565b61090f6110f8565b610919600061127c565b565b606060048054610482906114e6565b600033816109388286610d11565b9050838110156109985760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105d9565b6105388286868403610db5565b600033610513818585610f54565b6000670de0b6b3a764000060646109ca8486611562565b6109d49190611594565b6109de9190611594565b9392505050565b600060648211610a375760405162461bcd60e51b815260206004820152601e60248201527f436c6179426f6e64733a20494e53554646494349454e545f414d4f554e54000060448201526064016105d9565b7f0000000000000000000000000000000000000000000000000000000000000000421015610ab25760405162461bcd60e51b815260206004820152602260248201527f436c6179426f6e64733a204445504f5349545f4e4f545f5945545f5354415254604482015261115160f21b60648201526084016105d9565b7f00000000000000000000000000000000000000000000000000000000000000004210610b215760405162461bcd60e51b815260206004820152601960248201527f436c6179426f6e64733a204445504f5349545f434c4f5345440000000000000060448201526064016105d9565b6000610b2b61089a565b90506000610b38826106f0565b90506000610b4685836109b3565b9050610b528186611536565b6006546040516323b872dd60e01b8152336004820152306024820152604481018890529195506000916001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd391906115b6565b905080610c225760405162461bcd60e51b815260206004820152601a60248201527f436c6179426f6e64733a205452414e534645525f4641494c454400000000000060448201526064016105d9565b610c2c33866112ce565b84600754610c3a9190611536565b60078190557f00000000000000000000000000000000000000000000000000000000000000001015610cbe5760405162461bcd60e51b815260206004820152602760248201527f436c6179426f6e64733a204d41585f424f4e445f5245574152445f504f4f4c5f60448201526614915050d2115160ca1b60648201526084016105d9565b60408051878152602081018690529081018490526060810183905233907f374a351db3f664ea453a7ce5668a042151e5aac07bf62f30d35defd0a019b0be9060800160405180910390a250505050919050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610d446110f8565b6001600160a01b038116610da95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d9565b610db28161127c565b50565b6001600160a01b038316610e175760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105d9565b6001600160a01b038216610e785760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105d9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610ee68484610d11565b90506000198114610f4e5781811015610f415760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105d9565b610f4e8484848403610db5565b50505050565b6001600160a01b038316610fb85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105d9565b6001600160a01b03821661101a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105d9565b6001600160a01b038316600090815260208190526040902054818110156110925760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105d9565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610f4e565b6005546001600160a01b031633146109195760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d9565b6001600160a01b0382166111b25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105d9565b6001600160a01b038216600090815260208190526040902054818110156112265760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105d9565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610ecd565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166113245760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105d9565b80600260008282546113369190611536565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156113ba5785810183015185820160400152820161139e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146113f257600080fd5b919050565b6000806040838503121561140a57600080fd5b611413836113db565b946020939093013593505050565b60008060006060848603121561143657600080fd5b61143f846113db565b925061144d602085016113db565b9150604084013590509250925092565b60006020828403121561146f57600080fd5b5035919050565b60006020828403121561148857600080fd5b6109de826113db565b600080604083850312156114a457600080fd5b50508035926020909101359150565b600080604083850312156114c657600080fd5b6114cf836113db565b91506114dd602084016113db565b90509250929050565b600181811c908216806114fa57607f821691505b60208210810361151a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561051957610519611520565b60006020828403121561155b57600080fd5b5051919050565b600081600019048311821515161561157c5761157c611520565b500290565b8181038181111561051957610519611520565b6000826115b157634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156115c857600080fd5b815180151581146109de57600080fdfea264697066735822122085ecc845fed30f0d1ac6f3ad4863433875ccf9d367dfac07e38afba9dc1f1a1264736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn()": {
        "details": "Burns the remaining Clay in the contract*"
      },
      "claim()": {
        "details": "Burns zClay and returns the underlying Clay tokens*"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "issue(uint256)": {
        "params": {
          "_clayAmount": "The amount of CLAY deposited"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "issue(uint256)": {
        "notice": "Issues a zCLAY Bond depending on the amount of CLAY deposited and the current APY which depends on the time elapsed since bond programme inception"
      }
    },
    "notice": "You can deposit CLAY (ERC20 token native to Sumero) to get zCLAY Bonds (a new ERC20 representing the bond). These zCLAY Bonds can be minted upto 180 days from depositStartDate. The bonds will mature after a period of 2 years (i.e. 731 days, taking into account extra leap day for 2024) from the depositStartDate. There is a \"APY\" (Annual Percentage Yield) of 50% on the zCLAY Bonds that is constantly decreasing as the deposit  close date is nearing (i.e. from a maximum of 50% to 0%). Example: - User deposits 1 Clay and issues a zCLAY Bond on Day 1 of bond start date - [(deposit close timestamp - block timestamp) / (1 year in seconds) * APY] - User gets 2 zCLAY Bond (APY (50%) for next 2 years i.e 100% total interest) - 1 + (100% of 1) => 1 + 1 => 2 The user can claim the zCLAY Bonds for equivalent value of CLAY after the maturation date. The user has to lock his CLAY in to zCLAY bonds for atleast 2 years. They are open to trade these bonds on a secondary market (i.e. via LP pools on Sumero)",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 690,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 696,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 698,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 700,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 702,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 396,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 4833,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "clay",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(IClayToken)14651"
      },
      {
        "astId": 4837,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "totalBondDeposits",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IClayToken)14651": {
        "encoding": "inplace",
        "label": "contract IClayToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
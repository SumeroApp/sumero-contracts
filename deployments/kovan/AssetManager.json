{
  "address": "0x06F2026d87F09344dF3F868C0b27dD6620fcFD16",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "addEmp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "addStakingReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "addSwapPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "closeEmp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "closeStakingReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "closeSwapPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idToVerifiedEmps",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "enum AssetManager.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idToVerifiedStakingRewards",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "enum AssetManager.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idToVerifiedSwapPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "enum AssetManager.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "pauseEmp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "pauseStakingReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "pauseSwapPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalEmpAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStakingRewardAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSwapPairAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "unpauseEmp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "unpauseStakingReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "unpauseSwapPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x24a4dc50e13ddb07059ccb00ac0c21e4df8585af9c8928fd81bfb8a7cffb21ab",
  "receipt": {
    "to": null,
    "from": "0x8D9656505A20C9562488bfa6EA0d1eF6B12966d7",
    "contractAddress": "0x06F2026d87F09344dF3F868C0b27dD6620fcFD16",
    "transactionIndex": 0,
    "gasUsed": "899652",
    "logsBloom": "0x
    "blockHash": "0xd475f1e7f643c897a56e9435cfc4cde35ee472e51070bc97d41555cb220bb676",
    "transactionHash": "0x24a4dc50e13ddb07059ccb00ac0c21e4df8585af9c8928fd81bfb8a7cffb21ab",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 33097616,
        "transactionHash": "0x24a4dc50e13ddb07059ccb00ac0c21e4df8585af9c8928fd81bfb8a7cffb21ab",
        "address": "0x06F2026d87F09344dF3F868C0b27dD6620fcFD16",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008d9656505a20c9562488bfa6ea0d1ef6b12966d7"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd475f1e7f643c897a56e9435cfc4cde35ee472e51070bc97d41555cb220bb676"
      }
    ],
    "blockNumber": 33097616,
    "cumulativeGasUsed": "899652",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "fd7762901adce4ea23b627347ccb8d89",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"addEmp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"addStakingReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"addSwapPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"closeEmp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"closeStakingReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"closeSwapPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToVerifiedEmps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum AssetManager.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToVerifiedStakingRewards\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum AssetManager.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToVerifiedSwapPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum AssetManager.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"pauseEmp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"pauseStakingReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"pauseSwapPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalEmpAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakingRewardAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSwapPairAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"unpauseEmp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"unpauseStakingReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"unpauseSwapPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AssetManager.sol\":\"AssetManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AssetManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract AssetManager is Ownable {\\n    uint256 public totalEmpAssets;\\n    mapping(uint256 => Asset) public idToVerifiedEmps;\\n\\n    uint256 public totalSwapPairAssets;\\n    mapping(uint256 => Asset) public idToVerifiedSwapPairs;\\n\\n    uint256 public totalStakingRewardAssets;\\n    mapping(uint256 => Asset) public idToVerifiedStakingRewards;\\n\\n    enum Status {\\n        Closed,\\n        Paused,\\n        Open\\n    }\\n\\n    struct Asset {\\n        address addr;\\n        Status status;\\n    }\\n\\n    // EMPs\\n    function addEmp(address _asset) external onlyOwner {\\n        require(_asset != address(0), \\\"Asset Manager: ZERO_ADDRESS\\\");\\n        totalEmpAssets = totalEmpAssets + 1;\\n        idToVerifiedEmps[totalEmpAssets] = Asset(_asset, Status.Open);\\n    }\\n\\n    function pauseEmp(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedEmps[id].status == Status.Open,\\n            \\\"Asset Manager: ASSET_NOT_OPEN\\\"\\n        );\\n        idToVerifiedEmps[id].status = Status.Paused;\\n    }\\n\\n    function unpauseEmp(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedEmps[id].status == Status.Paused,\\n            \\\"Asset Manager: ASSET_NOT_PAUSED\\\"\\n        );\\n        idToVerifiedEmps[id].status = Status.Open;\\n    }\\n\\n    function closeEmp(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedEmps[id].addr != address(0),\\n            \\\"Asset Manager: ZERO_ADDRESS\\\"\\n        );\\n        require(\\n            idToVerifiedEmps[id].status != Status.Closed,\\n            \\\"Asset Manager: ASSET_ALREADY_CLOSED\\\"\\n        );\\n        idToVerifiedEmps[id].status = Status.Closed;\\n    }\\n\\n    // Swap Pairs\\n    function addSwapPair(address _asset) external onlyOwner {\\n        require(_asset != address(0), \\\"Asset Manager: ZERO_ADDRESS\\\");\\n        totalSwapPairAssets = totalSwapPairAssets + 1;\\n        idToVerifiedSwapPairs[totalSwapPairAssets] = Asset(_asset, Status.Open);\\n    }\\n\\n    function pauseSwapPair(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedSwapPairs[id].status == Status.Open,\\n            \\\"Asset Manager: ASSET_NOT_OPEN\\\"\\n        );\\n        idToVerifiedSwapPairs[id].status = Status.Paused;\\n    }\\n\\n    function unpauseSwapPair(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedSwapPairs[id].status == Status.Paused,\\n            \\\"Asset Manager: ASSET_NOT_PAUSED\\\"\\n        );\\n        idToVerifiedSwapPairs[id].status = Status.Open;\\n    }\\n\\n    function closeSwapPair(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedSwapPairs[id].addr != address(0),\\n            \\\"Asset Manager: ZERO_ADDRESS\\\"\\n        );\\n        require(\\n            idToVerifiedSwapPairs[id].status != Status.Closed,\\n            \\\"Asset Manager: ASSET_ALREADY_CLOSED\\\"\\n        );\\n        idToVerifiedSwapPairs[id].status = Status.Closed;\\n    }\\n\\n    // Staking Rewards\\n    function addStakingReward(address _asset) external onlyOwner {\\n        require(_asset != address(0), \\\"Asset Manager: ZERO_ADDRESS\\\");\\n        totalStakingRewardAssets = totalStakingRewardAssets + 1;\\n        idToVerifiedStakingRewards[totalStakingRewardAssets] = Asset(\\n            _asset,\\n            Status.Open\\n        );\\n    }\\n\\n    function pauseStakingReward(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedStakingRewards[id].status == Status.Open,\\n            \\\"Asset Manager: ASSET_NOT_OPEN\\\"\\n        );\\n        idToVerifiedStakingRewards[id].status = Status.Paused;\\n    }\\n\\n    function unpauseStakingReward(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedStakingRewards[id].status == Status.Paused,\\n            \\\"Asset Manager: ASSET_NOT_PAUSED\\\"\\n        );\\n        idToVerifiedStakingRewards[id].status = Status.Open;\\n    }\\n\\n    function closeStakingReward(uint256 id) external onlyOwner {\\n        require(\\n            idToVerifiedStakingRewards[id].addr != address(0),\\n            \\\"Asset Manager: ZERO_ADDRESS\\\"\\n        );\\n        require(\\n            idToVerifiedStakingRewards[id].status != Status.Closed,\\n            \\\"Asset Manager: ASSET_ALREADY_CLOSED\\\"\\n        );\\n        idToVerifiedStakingRewards[id].status = Status.Closed;\\n    }\\n}\\n\",\"keccak256\":\"0x986207c08de8e7f81ba952826dea61f88cec8a3fa0f65695ca491899720a3591\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610edc806100896000396000f3fe608060405234801561001057600080fd5b50600436106101765760003560e01c806366c0d6eb116100d8578063b7da168e1161008c578063cff24bd411610066578063cff24bd4146102cd578063f2fde38b146102e0578063f5781331146102f357610176565b8063b7da168e14610294578063c232efdf146102a7578063c5cb09f1146102ba57610176565b80638548872f116100bd5780638548872f146102595780638a856c991461026c5780638da5cb5b1461027f57610176565b806366c0d6eb1461023e578063715018a61461025157610176565b80632982c5201161012f578063603c206f11610114578063603c206f1461020557806362856e7a146102185780636317ae651461022b57610176565b80632982c520146101ea57806330c710fd146101f257610176565b80631c7fa069116101605780631c7fa069146101ba5780631fac0b92146101cf578063292fa1e2146101d757610176565b8062c0e2bb1461017b578063036ad6cd146101a5575b600080fd5b61018e610189366004610c7e565b610306565b60405161019c929190610caa565b60405180910390f35b6101b86101b3366004610c50565b61032d565b005b6101c261040f565b60405161019c9190610e79565b6101c2610415565b6101b86101e5366004610c7e565b61041b565b6101c26104a4565b6101b8610200366004610c7e565b6104aa565b6101b8610213366004610c50565b610530565b6101b8610226366004610c7e565b610601565b61018e610239366004610c7e565b610686565b6101b861024c366004610c7e565b6106ad565b6101b8610734565b61018e610267366004610c7e565b610748565b6101b861027a366004610c7e565b61076f565b610287610824565b60405161019c9190610c96565b6101b86102a2366004610c7e565b610833565b6101b86102b5366004610c50565b6108b8565b6101b86102c8366004610c7e565b610987565b6101b86102db366004610c7e565b610a0c565b6101b86102ee366004610c50565b610ac1565b6101b8610301366004610c7e565b610afb565b6004602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b610335610bb0565b6001600160a01b0381166103645760405162461bcd60e51b815260040161035b90610d42565b60405180910390fd5b600354610372906001610e82565b600355604080518082019091526001600160a01b0382168152602081016002905260035460009081526004602090815260409091208251815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390911617808255918301519091829060ff60a01b1916600160a01b83600281111561040557634e487b7160e01b600052602160045260246000fd5b0217905550505050565b60055481565b60015481565b610423610bb0565b6001600082815260066020526040902054600160a01b900460ff16600281111561045d57634e487b7160e01b600052602160045260246000fd5b1461047a5760405162461bcd60e51b815260040161035b90610dae565b600081815260066020526040902080546002919060ff60a01b1916600160a01b835b021790555050565b60035481565b6104b2610bb0565b6001600082815260026020819052604090912054600160a01b900460ff16908111156104ee57634e487b7160e01b600052602160045260246000fd5b1461050b5760405162461bcd60e51b815260040161035b90610dae565b6000818152600260208190526040909120805460ff60a01b1916600160a01b8361049c565b610538610bb0565b6001600160a01b03811661055e5760405162461bcd60e51b815260040161035b90610d42565b6001805461056b91610e82565b600155604080518082019091526001600160a01b0382168152602081016002905260015460009081526002602081815260409092208351815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909116178082559284015190929091839160ff60a01b191690600160a01b90849081111561040557634e487b7160e01b600052602160045260246000fd5b610609610bb0565b6001600082815260046020526040902054600160a01b900460ff16600281111561064357634e487b7160e01b600052602160045260246000fd5b146106605760405162461bcd60e51b815260040161035b90610dae565b600081815260046020526040902080546002919060ff60a01b1916600160a01b8361049c565b6006602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b6106b5610bb0565b6002600082815260026020819052604090912054600160a01b900460ff16908111156106f157634e487b7160e01b600052602160045260246000fd5b1461070e5760405162461bcd60e51b815260040161035b90610e42565b600081815260026020526040902080546001919060ff60a01b1916600160a01b8361049c565b61073c610bb0565b6107466000610bef565b565b6002602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b610777610bb0565b6000818152600460205260409020546001600160a01b03166107ab5760405162461bcd60e51b815260040161035b90610d42565b60008082815260046020526040902054600160a01b900460ff1660028111156107e457634e487b7160e01b600052602160045260246000fd5b14156108025760405162461bcd60e51b815260040161035b90610de5565b6000818152600460205260408120805460ff60a01b1916600160a01b8361049c565b6000546001600160a01b031690565b61083b610bb0565b6002600082815260066020526040902054600160a01b900460ff16600281111561087557634e487b7160e01b600052602160045260246000fd5b146108925760405162461bcd60e51b815260040161035b90610e42565b600081815260066020526040902080546001919060ff60a01b1916600160a01b8361049c565b6108c0610bb0565b6001600160a01b0381166108e65760405162461bcd60e51b815260040161035b90610d42565b6005546108f4906001610e82565b600555604080518082019091526001600160a01b0382168152602081016002905260055460009081526006602090815260409091208251815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390911617808255918301519091829060ff60a01b1916600160a01b83600281111561040557634e487b7160e01b600052602160045260246000fd5b61098f610bb0565b6002600082815260046020526040902054600160a01b900460ff1660028111156109c957634e487b7160e01b600052602160045260246000fd5b146109e65760405162461bcd60e51b815260040161035b90610e42565b600081815260046020526040902080546001919060ff60a01b1916600160a01b8361049c565b610a14610bb0565b6000818152600660205260409020546001600160a01b0316610a485760405162461bcd60e51b815260040161035b90610d42565b60008082815260066020526040902054600160a01b900460ff166002811115610a8157634e487b7160e01b600052602160045260246000fd5b1415610a9f5760405162461bcd60e51b815260040161035b90610de5565b6000818152600660205260408120805460ff60a01b1916600160a01b8361049c565b610ac9610bb0565b6001600160a01b038116610aef5760405162461bcd60e51b815260040161035b90610ce5565b610af881610bef565b50565b610b03610bb0565b6000818152600260205260409020546001600160a01b0316610b375760405162461bcd60e51b815260040161035b90610d42565b6000818152600260208190526040822054600160a01b900460ff1690811115610b7057634e487b7160e01b600052602160045260246000fd5b1415610b8e5760405162461bcd60e51b815260040161035b90610de5565b6000818152600260205260408120805460ff60a01b1916600160a01b8361049c565b610bb8610c4c565b6001600160a01b0316610bc9610824565b6001600160a01b0316146107465760405162461bcd60e51b815260040161035b90610d79565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b600060208284031215610c61578081fd5b81356001600160a01b0381168114610c77578182fd5b9392505050565b600060208284031215610c8f578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6001600160a01b03831681526040810160038310610cd857634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601b908201527f4173736574204d616e616765723a205a45524f5f414444524553530000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f4173736574204d616e616765723a2041535345545f4e4f545f50415553454400604082015260600190565b60208082526023908201527f4173736574204d616e616765723a2041535345545f414c52454144595f434c4f60408201527f5345440000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f4173736574204d616e616765723a2041535345545f4e4f545f4f50454e000000604082015260600190565b90815260200190565b60008219821115610ea157634e487b7160e01b81526011600452602481fd5b50019056fea264697066735822122082fc34214580fc21b634101c77e32b99d19f72a865105a0c40d2afea5bacdea664736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101765760003560e01c806366c0d6eb116100d8578063b7da168e1161008c578063cff24bd411610066578063cff24bd4146102cd578063f2fde38b146102e0578063f5781331146102f357610176565b8063b7da168e14610294578063c232efdf146102a7578063c5cb09f1146102ba57610176565b80638548872f116100bd5780638548872f146102595780638a856c991461026c5780638da5cb5b1461027f57610176565b806366c0d6eb1461023e578063715018a61461025157610176565b80632982c5201161012f578063603c206f11610114578063603c206f1461020557806362856e7a146102185780636317ae651461022b57610176565b80632982c520146101ea57806330c710fd146101f257610176565b80631c7fa069116101605780631c7fa069146101ba5780631fac0b92146101cf578063292fa1e2146101d757610176565b8062c0e2bb1461017b578063036ad6cd146101a5575b600080fd5b61018e610189366004610c7e565b610306565b60405161019c929190610caa565b60405180910390f35b6101b86101b3366004610c50565b61032d565b005b6101c261040f565b60405161019c9190610e79565b6101c2610415565b6101b86101e5366004610c7e565b61041b565b6101c26104a4565b6101b8610200366004610c7e565b6104aa565b6101b8610213366004610c50565b610530565b6101b8610226366004610c7e565b610601565b61018e610239366004610c7e565b610686565b6101b861024c366004610c7e565b6106ad565b6101b8610734565b61018e610267366004610c7e565b610748565b6101b861027a366004610c7e565b61076f565b610287610824565b60405161019c9190610c96565b6101b86102a2366004610c7e565b610833565b6101b86102b5366004610c50565b6108b8565b6101b86102c8366004610c7e565b610987565b6101b86102db366004610c7e565b610a0c565b6101b86102ee366004610c50565b610ac1565b6101b8610301366004610c7e565b610afb565b6004602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b610335610bb0565b6001600160a01b0381166103645760405162461bcd60e51b815260040161035b90610d42565b60405180910390fd5b600354610372906001610e82565b600355604080518082019091526001600160a01b0382168152602081016002905260035460009081526004602090815260409091208251815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390911617808255918301519091829060ff60a01b1916600160a01b83600281111561040557634e487b7160e01b600052602160045260246000fd5b0217905550505050565b60055481565b60015481565b610423610bb0565b6001600082815260066020526040902054600160a01b900460ff16600281111561045d57634e487b7160e01b600052602160045260246000fd5b1461047a5760405162461bcd60e51b815260040161035b90610dae565b600081815260066020526040902080546002919060ff60a01b1916600160a01b835b021790555050565b60035481565b6104b2610bb0565b6001600082815260026020819052604090912054600160a01b900460ff16908111156104ee57634e487b7160e01b600052602160045260246000fd5b1461050b5760405162461bcd60e51b815260040161035b90610dae565b6000818152600260208190526040909120805460ff60a01b1916600160a01b8361049c565b610538610bb0565b6001600160a01b03811661055e5760405162461bcd60e51b815260040161035b90610d42565b6001805461056b91610e82565b600155604080518082019091526001600160a01b0382168152602081016002905260015460009081526002602081815260409092208351815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909116178082559284015190929091839160ff60a01b191690600160a01b90849081111561040557634e487b7160e01b600052602160045260246000fd5b610609610bb0565b6001600082815260046020526040902054600160a01b900460ff16600281111561064357634e487b7160e01b600052602160045260246000fd5b146106605760405162461bcd60e51b815260040161035b90610dae565b600081815260046020526040902080546002919060ff60a01b1916600160a01b8361049c565b6006602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b6106b5610bb0565b6002600082815260026020819052604090912054600160a01b900460ff16908111156106f157634e487b7160e01b600052602160045260246000fd5b1461070e5760405162461bcd60e51b815260040161035b90610e42565b600081815260026020526040902080546001919060ff60a01b1916600160a01b8361049c565b61073c610bb0565b6107466000610bef565b565b6002602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b610777610bb0565b6000818152600460205260409020546001600160a01b03166107ab5760405162461bcd60e51b815260040161035b90610d42565b60008082815260046020526040902054600160a01b900460ff1660028111156107e457634e487b7160e01b600052602160045260246000fd5b14156108025760405162461bcd60e51b815260040161035b90610de5565b6000818152600460205260408120805460ff60a01b1916600160a01b8361049c565b6000546001600160a01b031690565b61083b610bb0565b6002600082815260066020526040902054600160a01b900460ff16600281111561087557634e487b7160e01b600052602160045260246000fd5b146108925760405162461bcd60e51b815260040161035b90610e42565b600081815260066020526040902080546001919060ff60a01b1916600160a01b8361049c565b6108c0610bb0565b6001600160a01b0381166108e65760405162461bcd60e51b815260040161035b90610d42565b6005546108f4906001610e82565b600555604080518082019091526001600160a01b0382168152602081016002905260055460009081526006602090815260409091208251815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390911617808255918301519091829060ff60a01b1916600160a01b83600281111561040557634e487b7160e01b600052602160045260246000fd5b61098f610bb0565b6002600082815260046020526040902054600160a01b900460ff1660028111156109c957634e487b7160e01b600052602160045260246000fd5b146109e65760405162461bcd60e51b815260040161035b90610e42565b600081815260046020526040902080546001919060ff60a01b1916600160a01b8361049c565b610a14610bb0565b6000818152600660205260409020546001600160a01b0316610a485760405162461bcd60e51b815260040161035b90610d42565b60008082815260066020526040902054600160a01b900460ff166002811115610a8157634e487b7160e01b600052602160045260246000fd5b1415610a9f5760405162461bcd60e51b815260040161035b90610de5565b6000818152600660205260408120805460ff60a01b1916600160a01b8361049c565b610ac9610bb0565b6001600160a01b038116610aef5760405162461bcd60e51b815260040161035b90610ce5565b610af881610bef565b50565b610b03610bb0565b6000818152600260205260409020546001600160a01b0316610b375760405162461bcd60e51b815260040161035b90610d42565b6000818152600260208190526040822054600160a01b900460ff1690811115610b7057634e487b7160e01b600052602160045260246000fd5b1415610b8e5760405162461bcd60e51b815260040161035b90610de5565b6000818152600260205260408120805460ff60a01b1916600160a01b8361049c565b610bb8610c4c565b6001600160a01b0316610bc9610824565b6001600160a01b0316146107465760405162461bcd60e51b815260040161035b90610d79565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b600060208284031215610c61578081fd5b81356001600160a01b0381168114610c77578182fd5b9392505050565b600060208284031215610c8f578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6001600160a01b03831681526040810160038310610cd857634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601b908201527f4173736574204d616e616765723a205a45524f5f414444524553530000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f4173736574204d616e616765723a2041535345545f4e4f545f50415553454400604082015260600190565b60208082526023908201527f4173736574204d616e616765723a2041535345545f414c52454144595f434c4f60408201527f5345440000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f4173736574204d616e616765723a2041535345545f4e4f545f4f50454e000000604082015260600190565b90815260200190565b60008219821115610ea157634e487b7160e01b81526011600452602481fd5b50019056fea264697066735822122082fc34214580fc21b634101c77e32b99d19f72a865105a0c40d2afea5bacdea664736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 400,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1633,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "totalEmpAssets",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 1638,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "idToVerifiedEmps",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Asset)1662_storage)"
      },
      {
        "astId": 1640,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "totalSwapPairAssets",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1645,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "idToVerifiedSwapPairs",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Asset)1662_storage)"
      },
      {
        "astId": 1647,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "totalStakingRewardAssets",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1652,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "idToVerifiedStakingRewards",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Asset)1662_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(Status)1656": {
        "encoding": "inplace",
        "label": "enum AssetManager.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(Asset)1662_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct AssetManager.Asset)",
        "numberOfBytes": "32",
        "value": "t_struct(Asset)1662_storage"
      },
      "t_struct(Asset)1662_storage": {
        "encoding": "inplace",
        "label": "struct AssetManager.Asset",
        "members": [
          {
            "astId": 1658,
            "contract": "contracts/AssetManager.sol:AssetManager",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1661,
            "contract": "contracts/AssetManager.sol:AssetManager",
            "label": "status",
            "offset": 20,
            "slot": "0",
            "type": "t_enum(Status)1656"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
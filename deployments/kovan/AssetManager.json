{
  "address": "0x8AC4370bad7d81A61522ebc74F900FF148f9f0CC",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "assetStatus",
      "outputs": [
        {
          "internalType": "enum AssetManager.AssetStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idToVerifiedAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4ed73718a6a728c747d70d8019491a867aa58433f2c0b9dd5b032b4faa639c84",
  "receipt": {
    "to": null,
    "from": "0x8D9656505A20C9562488bfa6EA0d1eF6B12966d7",
    "contractAddress": "0x8AC4370bad7d81A61522ebc74F900FF148f9f0CC",
    "transactionIndex": 2,
    "gasUsed": "438809",
    "logsBloom": "0x
    "blockHash": "0x94e4fb51d1653dae9436e92142715696af9970713e117e3d10d2d8d2626d8fac",
    "transactionHash": "0x4ed73718a6a728c747d70d8019491a867aa58433f2c0b9dd5b032b4faa639c84",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 31566968,
        "transactionHash": "0x4ed73718a6a728c747d70d8019491a867aa58433f2c0b9dd5b032b4faa639c84",
        "address": "0x8AC4370bad7d81A61522ebc74F900FF148f9f0CC",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008d9656505a20c9562488bfa6ea0d1ef6b12966d7"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0x94e4fb51d1653dae9436e92142715696af9970713e117e3d10d2d8d2626d8fac"
      }
    ],
    "blockNumber": 31566968,
    "cumulativeGasUsed": "633710",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f89c4ca40e023028963f85bcdd567dc1",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assetStatus\",\"outputs\":[{\"internalType\":\"enum AssetManager.AssetStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToVerifiedAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AssetManager.sol\":\"AssetManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/AssetManager.sol\":{\"content\":\"pragma solidity 0.6.12;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract AssetManager is Ownable {\\n    uint256 public totalAssets;\\n    enum AssetStatus {\\n        Closed,\\n        Paused,\\n        Open\\n    }\\n    mapping(address => AssetStatus) public assetStatus;\\n    mapping(uint256 => address) public idToVerifiedAsset;\\n\\n    function add(address _asset) external onlyOwner {\\n        assetStatus[_asset] = AssetStatus.Open;\\n        totalAssets = totalAssets + 1;\\n        idToVerifiedAsset[totalAssets] = _asset;\\n    }\\n\\n    function pause(address _asset) external onlyOwner {\\n        assetStatus[_asset] = AssetStatus.Paused;\\n    }\\n\\n    function close(address _asset) external onlyOwner {\\n        assetStatus[_asset] = AssetStatus.Closed;\\n    }\\n}\\n\",\"keccak256\":\"0xd0bdd45926190cb09997e5b50cc2b55032ffa0a788b350c8aee8d892d77fe8aa\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6106848061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806376a67a5111610076578063b396524a1161005b578063b396524a14610183578063c74073a1146101a0578063f2fde38b146101c6576100a3565b806376a67a51146101395780638da5cb5b1461015f576100a3565b806301e1d114146100a85780630a3b0a4f146100c2578063715018a6146100ea57806376057d1a146100f2575b600080fd5b6100b06101ec565b60408051918252519081900360200190f35b6100e8600480360360208110156100d857600080fd5b50356001600160a01b03166101f2565b005b6100e86102be565b6101186004803603602081101561010857600080fd5b50356001600160a01b0316610389565b6040518082600281111561012857fe5b815260200191505060405180910390f35b6100e86004803603602081101561014f57600080fd5b50356001600160a01b031661039e565b61016761043f565b604080516001600160a01b039092168252519081900360200190f35b6101676004803603602081101561019957600080fd5b503561044e565b6100e8600480360360208110156101b657600080fd5b50356001600160a01b0316610469565b6100e8600480360360208110156101dc57600080fd5b50356001600160a01b0316610503565b60015481565b6101fa610624565b6001600160a01b031661020b61043f565b6001600160a01b031614610266576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03166000818152600260208181526040808420805460ff1916909317909255600180548101908190558352600390529020805473ffffffffffffffffffffffffffffffffffffffff19169091179055565b6102c6610624565b6001600160a01b03166102d761043f565b6001600160a01b031614610332576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60026020526000908152604090205460ff1681565b6103a6610624565b6001600160a01b03166103b761043f565b6001600160a01b031614610412576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116600090815260026020526040902080546001919060ff191682805b021790555050565b6000546001600160a01b031690565b6003602052600090815260409020546001600160a01b031681565b610471610624565b6001600160a01b031661048261043f565b6001600160a01b0316146104dd576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166000908152600260205260408120805460ff1916600183610437565b61050b610624565b6001600160a01b031661051c61043f565b6001600160a01b031614610577576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105bc5760405162461bcd60e51b81526004018080602001828103825260268152602001806106296026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212203118aaf3633d454c4644a4b383850cd8422fa06dd3240d8e8ddd13310268792064736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c806376a67a5111610076578063b396524a1161005b578063b396524a14610183578063c74073a1146101a0578063f2fde38b146101c6576100a3565b806376a67a51146101395780638da5cb5b1461015f576100a3565b806301e1d114146100a85780630a3b0a4f146100c2578063715018a6146100ea57806376057d1a146100f2575b600080fd5b6100b06101ec565b60408051918252519081900360200190f35b6100e8600480360360208110156100d857600080fd5b50356001600160a01b03166101f2565b005b6100e86102be565b6101186004803603602081101561010857600080fd5b50356001600160a01b0316610389565b6040518082600281111561012857fe5b815260200191505060405180910390f35b6100e86004803603602081101561014f57600080fd5b50356001600160a01b031661039e565b61016761043f565b604080516001600160a01b039092168252519081900360200190f35b6101676004803603602081101561019957600080fd5b503561044e565b6100e8600480360360208110156101b657600080fd5b50356001600160a01b0316610469565b6100e8600480360360208110156101dc57600080fd5b50356001600160a01b0316610503565b60015481565b6101fa610624565b6001600160a01b031661020b61043f565b6001600160a01b031614610266576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03166000818152600260208181526040808420805460ff1916909317909255600180548101908190558352600390529020805473ffffffffffffffffffffffffffffffffffffffff19169091179055565b6102c6610624565b6001600160a01b03166102d761043f565b6001600160a01b031614610332576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60026020526000908152604090205460ff1681565b6103a6610624565b6001600160a01b03166103b761043f565b6001600160a01b031614610412576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116600090815260026020526040902080546001919060ff191682805b021790555050565b6000546001600160a01b031690565b6003602052600090815260409020546001600160a01b031681565b610471610624565b6001600160a01b031661048261043f565b6001600160a01b0316146104dd576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166000908152600260205260408120805460ff1916600183610437565b61050b610624565b6001600160a01b031661051c61043f565b6001600160a01b031614610577576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105bc5760405162461bcd60e51b81526004018080602001828103825260268152602001806106296026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212203118aaf3633d454c4644a4b383850cd8422fa06dd3240d8e8ddd13310268792064736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1075,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "totalAssets",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 1083,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "assetStatus",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_enum(AssetStatus)1079)"
      },
      {
        "astId": 1087,
        "contract": "contracts/AssetManager.sol:AssetManager",
        "label": "idToVerifiedAsset",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(AssetStatus)1079": {
        "encoding": "inplace",
        "label": "enum AssetManager.AssetStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_enum(AssetStatus)1079)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum AssetManager.AssetStatus)",
        "numberOfBytes": "32",
        "value": "t_enum(AssetStatus)1079"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
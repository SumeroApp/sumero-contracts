{
  "address": "0x878a55a2382F97A3d12ddea1De90Cdd3207d1615",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_clay",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maximumBondRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "daysLeftToMaturationDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardPercent",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "Issue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "APY_PERCENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BONDS_ISSUANCE_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BONUS_APY_PERCENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clay",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dailyYieldPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositCloseDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDaysLeftToMaturationDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "daysLeftToMaturationDate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardPercent",
          "type": "uint256"
        }
      ],
      "name": "getReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "daysLeftToMaturationDate",
          "type": "uint256"
        }
      ],
      "name": "getRewardPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewardPercent",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasEnoughClayLiquidity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_clayAmount",
          "type": "uint256"
        }
      ],
      "name": "issue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bondAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturationDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maximumBondRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBondDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x48ae8386dd3e748b3cf5709587b551114809a98f5d63c25c33bdd42480f3c8cb",
  "receipt": {
    "to": null,
    "from": "0x8D9656505A20C9562488bfa6EA0d1eF6B12966d7",
    "contractAddress": "0x878a55a2382F97A3d12ddea1De90Cdd3207d1615",
    "transactionIndex": 0,
    "gasUsed": "1422303",
    "logsBloom": "0x
    "blockHash": "0xe709efdd88d4c259a34d60cb24b6fbdd01361413e4c78d1a163104b4fb4970fd",
    "transactionHash": "0x48ae8386dd3e748b3cf5709587b551114809a98f5d63c25c33bdd42480f3c8cb",
    "logs": [],
    "blockNumber": 32659528,
    "cumulativeGasUsed": "1422303",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE0544883f42Dc1812528234ea8B2b7687d8FA38A",
    "10000000000000000000"
  ],
  "numDeployments": 7,
  "solcInputHash": "046ee9726fe69fac50e1dd2c839b039a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_clay\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maximumBondRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"daysLeftToMaturationDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPercent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"APY_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BONDS_ISSUANCE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BONUS_APY_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clay\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyYieldPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositCloseDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDaysLeftToMaturationDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"daysLeftToMaturationDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPercent\",\"type\":\"uint256\"}],\"name\":\"getReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"daysLeftToMaturationDate\",\"type\":\"uint256\"}],\"name\":\"getRewardPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardPercent\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasEnoughClayLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_clayAmount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturationDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumBondRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBondDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"claim()\":{\"details\":\"Burns zClay and returns the underlying Clay tokens*\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"issue(uint256)\":{\"params\":{\"_clayAmount\":\"The amount of CLAY deposited\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"issue(uint256)\":{\"notice\":\"Issues a zCLAY Bond depending on the amount of CLAY deposited and the current APY which depends on the time elapsed since bond programme inception\"}},\"notice\":\"You can deposit CLAY (ERC20 token native to Sumero) to get zCLAY Bonds (a new ERC20 representing the bond). These zCLAY Bonds can be minted upto a year from depositStartDate. The bonds will mature after a period of 3 years from the depositStartDate. There is a \\\"Fixed APY\\\" (Annual Percentage Yield) of 40% on the zCLAY Bonds and a \\\"Bonus APY\\\" of additional 20% that is constantly decreasing as the deposit close date is nearing (i.e. from a maximum of 20% to 0%). In total giving a maximum of 60% APY if a user creates bonds at Day 1 of bond start date. - FIXED_APY = 40% - BONUS_APY = 20% (decreases as deposit close date nears) Example: - User deposits 1 Clay and issues a zCLAY Bond on Day 1 of bond start date - [(deposit close timestamp - block timestamp) / (1 year in seconds) * Bonus_APY] - Total APY = APY + Bonus APY = 60% - User get 2.8 zCLAY Bond (Total APY (60%) for next 3 years i.e 180% total interest) - 1 + (180% of 1) => 1 + 1.8 => 2.8 The user can claim the zCLAY Bonds for equivalent value of CLAY after the maturation date. The user has to lock his CLAY in to zCLAY bonds for atleast 3 years. They are open to trade these bonds on a secondary market (i.e. via LP pools on Sumero)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ClayBonds.sol\":\"ClayBonds\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/ClayBonds.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\n/**\\n    You can deposit CLAY (ERC20 token native to Sumero) to get zCLAY Bonds (a new ERC20 representing the bond).\\n\\n    These zCLAY Bonds can be minted upto a year from depositStartDate.\\n    The bonds will mature after a period of 3 years from the depositStartDate.\\n\\n    There is a \\\"Fixed APY\\\" (Annual Percentage Yield) of 40% on the zCLAY Bonds and a \\\"Bonus APY\\\" of additional 20% that is constantly decreasing as the deposit close date is nearing (i.e. from a maximum of 20% to 0%).\\n    In total giving a maximum of 60% APY if a user creates bonds at Day 1 of bond start date.\\n\\n    - FIXED_APY = 40%\\n    - BONUS_APY = 20% (decreases as deposit close date nears)\\n\\n    Example:\\n\\n    - User deposits 1 Clay and issues a zCLAY Bond on Day 1 of bond start date\\n    - [(deposit close timestamp - block timestamp) / (1 year in seconds) * Bonus_APY]\\n    - Total APY = APY + Bonus APY = 60%\\n    - User get 2.8 zCLAY Bond (Total APY (60%) for next 3 years i.e 180% total interest)\\n    - 1 + (180% of 1) => 1 + 1.8 => 2.8\\n    \\n    The user can claim the zCLAY Bonds for equivalent value of CLAY after the maturation date.\\n    The user has to lock his CLAY in to zCLAY bonds for atleast 3 years. They are open to trade these bonds on a secondary market (i.e. via LP pools on Sumero)\\n */\\ncontract ClayBonds is ERC20(\\\"zClay Token\\\", \\\"zCLAY\\\") {\\n    IERC20 public clay;\\n\\n    // the maximum upper limit of bond rewards that this contract will give over it's lifetime\\n    uint256 public maximumBondRewards;\\n    // total zCLAY bonds locked into the contract\\n    uint256 public totalBondDeposits;\\n\\n    uint256 public depositStartDate;\\n    uint256 public depositCloseDate;\\n    uint256 public maturationDate;\\n\\n    uint256 public dailyYieldPercent;\\n\\n    uint256 public constant APY_PERCENT = 40;\\n    uint256 public constant BONUS_APY_PERCENT = 20;\\n    uint256 public constant BONDS_ISSUANCE_PERIOD = 1 days * 365;\\n\\n    event Issue(\\n        uint256 amount,\\n        uint256 daysLeftToMaturationDate,\\n        uint256 rewardPercent,\\n        uint256 reward\\n    );\\n\\n    constructor(IERC20 _clay, uint256 _maximumBondRewards) {\\n        clay = _clay;\\n        maximumBondRewards = _maximumBondRewards;\\n        depositStartDate = block.timestamp;\\n\\n        // TODO: take into consideration leap year?\\n\\n        // deposit close date is 1 year in future\\n        depositCloseDate = depositStartDate + BONDS_ISSUANCE_PERIOD;\\n        // maturation date of bond is 3 years in future\\n        maturationDate = depositStartDate + (BONDS_ISSUANCE_PERIOD * 3);\\n\\n        // calculate daily yield\\n        // APY details can be taken as constructor argument\\n        dailyYieldPercent =\\n            ((APY_PERCENT + BONUS_APY_PERCENT) * (1 ether)) /\\n            365;\\n    }\\n\\n    function getDaysLeftToMaturationDate()\\n        public\\n        view\\n        returns (uint256 daysLeftToMaturationDate)\\n    {\\n        if (maturationDate < block.timestamp) {\\n            return 0; // just return 0 instead of dealing with negatives\\n        }\\n        // calculate days remaining till maturation day\\n        daysLeftToMaturationDate =\\n            (maturationDate - block.timestamp) /\\n            (1 days);\\n    }\\n\\n    function getRewardPercent(uint256 daysLeftToMaturationDate)\\n        public\\n        view\\n        returns (uint256 rewardPercent)\\n    {\\n        // Total Percentage Reward => dailyYieldPercent * daysLeftToMaturationDate\\n        // adding 1 here to consider interest for the current ongoing day\\n        rewardPercent = dailyYieldPercent * (daysLeftToMaturationDate + 1);\\n    }\\n\\n    function getReward(uint256 _amount, uint256 _rewardPercent)\\n        public\\n        pure\\n        returns (uint256 reward)\\n    {\\n        // bondAmount => amount + (total percentage reward * amount)\\n        reward = ((_amount * _rewardPercent) / 100) / 1 ether;\\n    }\\n\\n    function hasEnoughClayLiquidity() public view returns (bool) {\\n        if (clay.balanceOf(address(this)) >= totalBondDeposits) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * Issues a zCLAY Bond depending on the amount of CLAY deposited and the current APY which depends on the time elapsed since bond programme inception\\n     * @param _clayAmount The amount of CLAY deposited\\n     */\\n    function issue(uint256 _clayAmount) public returns (uint256 bondAmount) {\\n        require(_clayAmount > 100, \\\"Clay Amount must be greater than 100 wei\\\");\\n        require(\\n            block.timestamp >= depositStartDate &&\\n                block.timestamp < depositCloseDate,\\n            \\\"Deposit closed\\\"\\n        );\\n\\n        uint256 daysLeftToMaturationDate = getDaysLeftToMaturationDate();\\n        uint256 rewardPercent = getRewardPercent(daysLeftToMaturationDate);\\n        uint256 reward = getReward(_clayAmount, rewardPercent);\\n\\n        bondAmount = _clayAmount + reward;\\n\\n        clay.transferFrom(msg.sender, address(this), _clayAmount);\\n        _mint(msg.sender, bondAmount);\\n\\n        totalBondDeposits = totalBondDeposits + bondAmount;\\n\\n        require(\\n            totalBondDeposits < maximumBondRewards,\\n            \\\"Maximum Bond Reward Pool Reached\\\"\\n        );\\n        require(\\n            hasEnoughClayLiquidity(),\\n            \\\"Bonds contract has insufficient CLAY Liquidity\\\"\\n        );\\n        emit Issue(\\n            _clayAmount,\\n            daysLeftToMaturationDate,\\n            rewardPercent,\\n            reward\\n        );\\n    }\\n\\n    /**\\n     * @dev Burns zClay and returns the underlying Clay tokens\\n     **/\\n    function claim() public {\\n        require(\\n            maturationDate <= block.timestamp,\\n            \\\"Bond Maturity date not reached\\\"\\n        );\\n        uint256 balance = balanceOf(msg.sender);\\n        require(balance > 0, \\\"Balance must be greater than zero\\\");\\n        _burn(msg.sender, balance);\\n        clay.transfer(msg.sender, balance);\\n    }\\n}\\n\",\"keccak256\":\"0xd63d4ddf338e644ddae59156c0dbbeca3cf25545b3717dd4d0f59e182ddaa9a0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001842380380620018428339810160408190526200003491620001dd565b604080518082018252600b81526a3d21b630bc902a37b5b2b760a91b6020808301918252835180850190945260058452647a434c415960d81b908401528151919291620000849160039162000137565b5080516200009a90600490602084019062000137565b5050600580546001600160a01b0319166001600160a01b038516179055506006819055426008819055620000d4906301e133809062000217565b600955620000e86301e13380600362000253565b600854620000f7919062000217565b600a5561016d6200010b6014602862000217565b6200011f90670de0b6b3a764000062000253565b6200012b919062000232565b600b5550620002c89050565b828054620001459062000275565b90600052602060002090601f016020900481019282620001695760008555620001b4565b82601f106200018457805160ff1916838001178555620001b4565b82800160010185558215620001b4579182015b82811115620001b457825182559160200191906001019062000197565b50620001c2929150620001c6565b5090565b5b80821115620001c25760008155600101620001c7565b60008060408385031215620001f0578182fd5b82516001600160a01b038116811462000207578283fd5b6020939093015192949293505050565b600082198211156200022d576200022d620002b2565b500190565b6000826200024e57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615620002705762000270620002b2565b500290565b6002810460018216806200028a57607f821691505b60208210811415620002ac57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b61156a80620002d86000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c8063954b2f24116100f9578063b90bc51911610097578063d6afbfd011610071578063d6afbfd014610325578063dd62ed3e1461032d578063ec1f5a9714610340578063ff6bca6914610348576101b9565b8063b90bc519146102f7578063cc872b661461030a578063d66f0acb1461031d576101b9565b8063a457c2d7116100d3578063a457c2d7146102b4578063a4d60c7c146102c7578063a6087220146102dc578063a9059cbb146102e4576101b9565b8063954b2f241461029c57806395d89b41146102a457806398975e85146102ac576101b9565b80633f9d01c0116101665780634e71d92d116101405780634e71d92d1461026f5780635140af3f1461027957806370a08231146102815780637922569914610294576101b9565b80633f9d01c01461024c5780634aec1928146102545780634e68d1141461025c576101b9565b806323b872dd1161019757806323b872dd14610211578063313ce567146102245780633950935114610239576101b9565b806306fdde03146101be578063095ea7b3146101dc57806318160ddd146101fc575b600080fd5b6101c6610350565b6040516101d39190610ee0565b60405180910390f35b6101ef6101ea366004610dea565b6103e3565b6040516101d39190610ed5565b610204610405565b6040516101d39190611443565b6101ef61021f366004610daf565b61040b565b61022c610439565b6040516101d39190611467565b6101ef610247366004610dea565b61043e565b61020461046a565b61020461046f565b61020461026a366004610e33565b610475565b610277610495565b005b610204610598565b61020461028f366004610d63565b6105cd565b6102046105ec565b6101ef6105f1565b6101c66106a2565b6102046106b1565b6101ef6102c2366004610dea565b6106b9565b6102cf610701565b6040516101d39190610e84565b610204610710565b6101ef6102f2366004610dea565b610716565b610204610305366004610e63565b61072e565b610204610318366004610e33565b610760565b610204610929565b61020461092f565b61020461033b366004610d7d565b610935565b610204610960565b610204610966565b60606003805461035f906114e3565b80601f016020809104026020016040519081016040528092919081815260200182805461038b906114e3565b80156103d85780601f106103ad576101008083540402835291602001916103d8565b820191906000526020600020905b8154815290600101906020018083116103bb57829003601f168201915b505050505090505b90565b6000806103ee61096c565b90506103fb818585610970565b5060019392505050565b60025490565b60008061041661096c565b9050610423858285610a24565b61042e858585610a6e565b506001949350505050565b601290565b60008061044961096c565b90506103fb81858561045b8589610935565b6104659190611475565b610970565b601481565b600b5481565b6000610482826001611475565b600b5461048f91906114ad565b92915050565b42600a5411156104c05760405162461bcd60e51b81526004016104b790611261565b60405180910390fd5b60006104cb336105cd565b9050600081116104ed5760405162461bcd60e51b81526004016104b7906111a7565b6104f73382610b92565b6005546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063a9059cbb906105429033908590600401610ebc565b602060405180830381600087803b15801561055c57600080fd5b505af1158015610570573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105949190610e13565b5050565b600042600a5410156105ac575060006103e0565b6201518042600a546105be91906114cc565b6105c8919061148d565b905090565b6001600160a01b0381166000908152602081905260409020545b919050565b602881565b6007546005546040517f70a08231000000000000000000000000000000000000000000000000000000008152600092916001600160a01b0316906370a082319061063f903090600401610e84565b60206040518083038186803b15801561065757600080fd5b505afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190610e4b565b1061069c575060016103e0565b50600090565b60606004805461035f906114e3565b6301e1338081565b6000806106c461096c565b905060006106d28286610935565b9050838110156106f45760405162461bcd60e51b81526004016104b7906113af565b61042e8286868403610970565b6005546001600160a01b031681565b60095481565b60008061072161096c565b90506103fb818585610a6e565b6000670de0b6b3a7640000606461074584866114ad565b61074f919061148d565b610759919061148d565b9392505050565b6000606482116107825760405162461bcd60e51b81526004016104b790611204565b6008544210158015610795575060095442105b6107b15760405162461bcd60e51b81526004016104b790610fed565b60006107bb610598565b905060006107c882610475565b905060006107d6858361072e565b90506107e28186611475565b6005546040517f23b872dd0000000000000000000000000000000000000000000000000000000081529195506001600160a01b0316906323b872dd9061083090339030908a90600401610e98565b602060405180830381600087803b15801561084a57600080fd5b505af115801561085e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108829190610e13565b5061088d3385610c84565b8360075461089b9190611475565b6007819055600654116108c05760405162461bcd60e51b81526004016104b790611024565b6108c86105f1565b6108e45760405162461bcd60e51b81526004016104b790610f33565b7fb93112bad930e8f857186a753ad92a9bb21c2c34169673ed07e60accffc430b685848484604051610919949392919061144c565b60405180910390a1505050919050565b60075481565b60065481565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600a5481565b60085481565b3390565b6001600160a01b0383166109965760405162461bcd60e51b81526004016104b790611352565b6001600160a01b0382166109bc5760405162461bcd60e51b81526004016104b7906110b6565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610a17908590611443565b60405180910390a3505050565b6000610a308484610935565b90506000198114610a685781811015610a5b5760405162461bcd60e51b81526004016104b790611113565b610a688484848403610970565b50505050565b6001600160a01b038316610a945760405162461bcd60e51b81526004016104b7906112f5565b6001600160a01b038216610aba5760405162461bcd60e51b81526004016104b790610f90565b610ac5838383610c7f565b6001600160a01b03831660009081526020819052604090205481811015610afe5760405162461bcd60e51b81526004016104b79061114a565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b35908490611475565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b7f9190611443565b60405180910390a3610a68848484610c7f565b6001600160a01b038216610bb85760405162461bcd60e51b81526004016104b790611298565b610bc482600083610c7f565b6001600160a01b03821660009081526020819052604090205481811015610bfd5760405162461bcd60e51b81526004016104b790611059565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610c2c9084906114cc565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c6f908690611443565b60405180910390a3610c7f836000845b505050565b6001600160a01b038216610caa5760405162461bcd60e51b81526004016104b79061140c565b610cb660008383610c7f565b8060026000828254610cc89190611475565b90915550506001600160a01b03821660009081526020819052604081208054839290610cf5908490611475565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d38908590611443565b60405180910390a361059460008383610c7f565b80356001600160a01b03811681146105e757600080fd5b600060208284031215610d74578081fd5b61075982610d4c565b60008060408385031215610d8f578081fd5b610d9883610d4c565b9150610da660208401610d4c565b90509250929050565b600080600060608486031215610dc3578081fd5b610dcc84610d4c565b9250610dda60208501610d4c565b9150604084013590509250925092565b60008060408385031215610dfc578182fd5b610e0583610d4c565b946020939093013593505050565b600060208284031215610e24578081fd5b81518015158114610759578182fd5b600060208284031215610e44578081fd5b5035919050565b600060208284031215610e5c578081fd5b5051919050565b60008060408385031215610e75578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b81811015610f0c57858101830151858201604001528201610ef0565b81811115610f1d5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f426f6e647320636f6e74726163742068617320696e73756666696369656e742060408201527f434c4159204c6971756964697479000000000000000000000000000000000000606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252600e908201527f4465706f73697420636c6f736564000000000000000000000000000000000000604082015260600190565b6020808252818101527f4d6178696d756d20426f6e642052657761726420506f6f6c2052656163686564604082015260600190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60408201527f6365000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f42616c616e6365206d7573742062652067726561746572207468616e207a657260408201527f6f00000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526028908201527f436c617920416d6f756e74206d7573742062652067726561746572207468616e60408201527f2031303020776569000000000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f426f6e64204d617475726974792064617465206e6f7420726561636865640000604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b93845260208401929092526040830152606082015260800190565b60ff91909116815260200190565b600082198211156114885761148861151e565b500190565b6000826114a857634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156114c7576114c761151e565b500290565b6000828210156114de576114de61151e565b500390565b6002810460018216806114f757607f821691505b6020821081141561151857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122054fed08f022e745316a6119b19609308202b0e802cb54f8868ed9c72f1fcc62864736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101b95760003560e01c8063954b2f24116100f9578063b90bc51911610097578063d6afbfd011610071578063d6afbfd014610325578063dd62ed3e1461032d578063ec1f5a9714610340578063ff6bca6914610348576101b9565b8063b90bc519146102f7578063cc872b661461030a578063d66f0acb1461031d576101b9565b8063a457c2d7116100d3578063a457c2d7146102b4578063a4d60c7c146102c7578063a6087220146102dc578063a9059cbb146102e4576101b9565b8063954b2f241461029c57806395d89b41146102a457806398975e85146102ac576101b9565b80633f9d01c0116101665780634e71d92d116101405780634e71d92d1461026f5780635140af3f1461027957806370a08231146102815780637922569914610294576101b9565b80633f9d01c01461024c5780634aec1928146102545780634e68d1141461025c576101b9565b806323b872dd1161019757806323b872dd14610211578063313ce567146102245780633950935114610239576101b9565b806306fdde03146101be578063095ea7b3146101dc57806318160ddd146101fc575b600080fd5b6101c6610350565b6040516101d39190610ee0565b60405180910390f35b6101ef6101ea366004610dea565b6103e3565b6040516101d39190610ed5565b610204610405565b6040516101d39190611443565b6101ef61021f366004610daf565b61040b565b61022c610439565b6040516101d39190611467565b6101ef610247366004610dea565b61043e565b61020461046a565b61020461046f565b61020461026a366004610e33565b610475565b610277610495565b005b610204610598565b61020461028f366004610d63565b6105cd565b6102046105ec565b6101ef6105f1565b6101c66106a2565b6102046106b1565b6101ef6102c2366004610dea565b6106b9565b6102cf610701565b6040516101d39190610e84565b610204610710565b6101ef6102f2366004610dea565b610716565b610204610305366004610e63565b61072e565b610204610318366004610e33565b610760565b610204610929565b61020461092f565b61020461033b366004610d7d565b610935565b610204610960565b610204610966565b60606003805461035f906114e3565b80601f016020809104026020016040519081016040528092919081815260200182805461038b906114e3565b80156103d85780601f106103ad576101008083540402835291602001916103d8565b820191906000526020600020905b8154815290600101906020018083116103bb57829003601f168201915b505050505090505b90565b6000806103ee61096c565b90506103fb818585610970565b5060019392505050565b60025490565b60008061041661096c565b9050610423858285610a24565b61042e858585610a6e565b506001949350505050565b601290565b60008061044961096c565b90506103fb81858561045b8589610935565b6104659190611475565b610970565b601481565b600b5481565b6000610482826001611475565b600b5461048f91906114ad565b92915050565b42600a5411156104c05760405162461bcd60e51b81526004016104b790611261565b60405180910390fd5b60006104cb336105cd565b9050600081116104ed5760405162461bcd60e51b81526004016104b7906111a7565b6104f73382610b92565b6005546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063a9059cbb906105429033908590600401610ebc565b602060405180830381600087803b15801561055c57600080fd5b505af1158015610570573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105949190610e13565b5050565b600042600a5410156105ac575060006103e0565b6201518042600a546105be91906114cc565b6105c8919061148d565b905090565b6001600160a01b0381166000908152602081905260409020545b919050565b602881565b6007546005546040517f70a08231000000000000000000000000000000000000000000000000000000008152600092916001600160a01b0316906370a082319061063f903090600401610e84565b60206040518083038186803b15801561065757600080fd5b505afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190610e4b565b1061069c575060016103e0565b50600090565b60606004805461035f906114e3565b6301e1338081565b6000806106c461096c565b905060006106d28286610935565b9050838110156106f45760405162461bcd60e51b81526004016104b7906113af565b61042e8286868403610970565b6005546001600160a01b031681565b60095481565b60008061072161096c565b90506103fb818585610a6e565b6000670de0b6b3a7640000606461074584866114ad565b61074f919061148d565b610759919061148d565b9392505050565b6000606482116107825760405162461bcd60e51b81526004016104b790611204565b6008544210158015610795575060095442105b6107b15760405162461bcd60e51b81526004016104b790610fed565b60006107bb610598565b905060006107c882610475565b905060006107d6858361072e565b90506107e28186611475565b6005546040517f23b872dd0000000000000000000000000000000000000000000000000000000081529195506001600160a01b0316906323b872dd9061083090339030908a90600401610e98565b602060405180830381600087803b15801561084a57600080fd5b505af115801561085e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108829190610e13565b5061088d3385610c84565b8360075461089b9190611475565b6007819055600654116108c05760405162461bcd60e51b81526004016104b790611024565b6108c86105f1565b6108e45760405162461bcd60e51b81526004016104b790610f33565b7fb93112bad930e8f857186a753ad92a9bb21c2c34169673ed07e60accffc430b685848484604051610919949392919061144c565b60405180910390a1505050919050565b60075481565b60065481565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600a5481565b60085481565b3390565b6001600160a01b0383166109965760405162461bcd60e51b81526004016104b790611352565b6001600160a01b0382166109bc5760405162461bcd60e51b81526004016104b7906110b6565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610a17908590611443565b60405180910390a3505050565b6000610a308484610935565b90506000198114610a685781811015610a5b5760405162461bcd60e51b81526004016104b790611113565b610a688484848403610970565b50505050565b6001600160a01b038316610a945760405162461bcd60e51b81526004016104b7906112f5565b6001600160a01b038216610aba5760405162461bcd60e51b81526004016104b790610f90565b610ac5838383610c7f565b6001600160a01b03831660009081526020819052604090205481811015610afe5760405162461bcd60e51b81526004016104b79061114a565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b35908490611475565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b7f9190611443565b60405180910390a3610a68848484610c7f565b6001600160a01b038216610bb85760405162461bcd60e51b81526004016104b790611298565b610bc482600083610c7f565b6001600160a01b03821660009081526020819052604090205481811015610bfd5760405162461bcd60e51b81526004016104b790611059565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610c2c9084906114cc565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c6f908690611443565b60405180910390a3610c7f836000845b505050565b6001600160a01b038216610caa5760405162461bcd60e51b81526004016104b79061140c565b610cb660008383610c7f565b8060026000828254610cc89190611475565b90915550506001600160a01b03821660009081526020819052604081208054839290610cf5908490611475565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d38908590611443565b60405180910390a361059460008383610c7f565b80356001600160a01b03811681146105e757600080fd5b600060208284031215610d74578081fd5b61075982610d4c565b60008060408385031215610d8f578081fd5b610d9883610d4c565b9150610da660208401610d4c565b90509250929050565b600080600060608486031215610dc3578081fd5b610dcc84610d4c565b9250610dda60208501610d4c565b9150604084013590509250925092565b60008060408385031215610dfc578182fd5b610e0583610d4c565b946020939093013593505050565b600060208284031215610e24578081fd5b81518015158114610759578182fd5b600060208284031215610e44578081fd5b5035919050565b600060208284031215610e5c578081fd5b5051919050565b60008060408385031215610e75578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b81811015610f0c57858101830151858201604001528201610ef0565b81811115610f1d5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f426f6e647320636f6e74726163742068617320696e73756666696369656e742060408201527f434c4159204c6971756964697479000000000000000000000000000000000000606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252600e908201527f4465706f73697420636c6f736564000000000000000000000000000000000000604082015260600190565b6020808252818101527f4d6178696d756d20426f6e642052657761726420506f6f6c2052656163686564604082015260600190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60408201527f6365000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f42616c616e6365206d7573742062652067726561746572207468616e207a657260408201527f6f00000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526028908201527f436c617920416d6f756e74206d7573742062652067726561746572207468616e60408201527f2031303020776569000000000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f426f6e64204d617475726974792064617465206e6f7420726561636865640000604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b93845260208401929092526040830152606082015260800190565b60ff91909116815260200190565b600082198211156114885761148861151e565b500190565b6000826114a857634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156114c7576114c761151e565b500290565b6000828210156114de576114de61151e565b500390565b6002810460018216806114f757607f821691505b6020821081141561151857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122054fed08f022e745316a6119b19609308202b0e802cb54f8868ed9c72f1fcc62864736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "claim()": {
        "details": "Burns zClay and returns the underlying Clay tokens*"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "issue(uint256)": {
        "params": {
          "_clayAmount": "The amount of CLAY deposited"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "issue(uint256)": {
        "notice": "Issues a zCLAY Bond depending on the amount of CLAY deposited and the current APY which depends on the time elapsed since bond programme inception"
      }
    },
    "notice": "You can deposit CLAY (ERC20 token native to Sumero) to get zCLAY Bonds (a new ERC20 representing the bond). These zCLAY Bonds can be minted upto a year from depositStartDate. The bonds will mature after a period of 3 years from the depositStartDate. There is a \"Fixed APY\" (Annual Percentage Yield) of 40% on the zCLAY Bonds and a \"Bonus APY\" of additional 20% that is constantly decreasing as the deposit close date is nearing (i.e. from a maximum of 20% to 0%). In total giving a maximum of 60% APY if a user creates bonds at Day 1 of bond start date. - FIXED_APY = 40% - BONUS_APY = 20% (decreases as deposit close date nears) Example: - User deposits 1 Clay and issues a zCLAY Bond on Day 1 of bond start date - [(deposit close timestamp - block timestamp) / (1 year in seconds) * Bonus_APY] - Total APY = APY + Bonus APY = 60% - User get 2.8 zCLAY Bond (Total APY (60%) for next 3 years i.e 180% total interest) - 1 + (180% of 1) => 1 + 1.8 => 2.8 The user can claim the zCLAY Bonds for equivalent value of CLAY after the maturation date. The user has to lock his CLAY in to zCLAY bonds for atleast 3 years. They are open to trade these bonds on a secondary market (i.e. via LP pools on Sumero)",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 669,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 675,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 677,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 679,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 681,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 1716,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "clay",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IERC20)1317"
      },
      {
        "astId": 1718,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "maximumBondRewards",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1720,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "totalBondDeposits",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1722,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "depositStartDate",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 1724,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "depositCloseDate",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 1726,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "maturationDate",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 1728,
        "contract": "contracts/ClayBonds.sol:ClayBonds",
        "label": "dailyYieldPercent",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)1317": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}